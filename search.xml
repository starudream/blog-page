<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Root 环境下安装系统证书</title>
    <url>/2023/11/05/add-ca-cert-at-root/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">htk-inject-system-cert.sh</span></span><br><span class="line">set -e # Fail on error</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Create a separate temp directory, to hold the current certificates</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Without this, when we add the mount we can<span class="string">&#x27;t read the current certs anymore.</span></span></span><br><span class="line">mkdir -m 700 /data/local/tmp/htk-ca-copy</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Copy out the existing certificates</span></span></span><br><span class="line">cp /system/etc/security/cacerts/* /data/local/tmp/htk-ca-copy/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Create the in-memory mount on top of the system certs folder</span></span></span><br><span class="line">mount -t tmpfs tmpfs /system/etc/security/cacerts</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Copy the existing certs back into the tmpfs mount, so we keep trusting them</span></span></span><br><span class="line">mv /data/local/tmp/htk-ca-copy/* /system/etc/security/cacerts/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Copy our new cert in, so we trust that too</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">cp /data/local/tmp/c88f7ed0.0 /system/etc/security/cacerts/</span></span></span><br><span class="line">cp /data/misc/user/0/cacerts-added/* /system/etc/security/cacerts/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Update the perms &amp; selinux context labels, so everything is as readable as before</span></span></span><br><span class="line">chown root:root /system/etc/security/cacerts/*</span><br><span class="line">chmod 644 /system/etc/security/cacerts/*</span><br><span class="line">chcon u:object_r:system_file:s0 /system/etc/security/cacerts/*</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Delete the temp cert directory &amp; this script itself</span></span></span><br><span class="line">rm -r /data/local/tmp/htk-ca-copy</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">rm $&#123;injectionScriptPath&#125;</span></span></span><br><span class="line">echo &quot;System cert successfully injected&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>ref: <span class="exturl" data-url="aHR0cDovLzkxZmFucy5jb20uY24vcG9zdC9jZXJ0aWZpY2F0ZS8jZ3NjLnRhYj0w">http://91fans.com.cn/post/certificate/#gsc.tab=0<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>root</tag>
        <tag>magisk</tag>
      </tags>
  </entry>
  <entry>
    <title>无 Root 抓包 HTTPS 请求</title>
    <url>/2022/05/09/android-packet-capture-without-root/</url>
    <content><![CDATA[<p>适用于 <code>Android 12</code>，理论上适配低版本。</p>
<p>测试环境 <code>MIUI13</code> <code>Android 12</code>。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZCbGFja0JveC9CbGFja0JveC9yZWxlYXNlcy9sYXRlc3Q=">BlackBox<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1ZpUmIzL1RydXN0TWVBbHJlYWR5L3JlbGVhc2VzL2xhdGVzdA==">TrustMeAlready<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYXBwcy9kZXRhaWxzP2lkPWNvbS52bmV0LnRlY2g=">VNET<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXdKbXQ2YmdKRDFpVW1Hc1hyZ1RCclE=">百度云<i class="fa fa-external-link-alt"></i></span> <code>cn7g</code></p>
</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>依次安装以上三个软件。</p>
<p>打开 <code>BlackBox</code>，先点击右下角的加号，将需要抓包的软件和 <code>TrustMeAlready</code> 加入到虚拟机中，再点击右上角打开 <code>软件设置</code>。</p>
<img data-src="/images/24-1.jpg" alt="BlackBox" style="max-height:600px;"/>

<p>开启 <code>启用Xposed框架</code>。</p>
<img data-src="/images/24-2.jpg" alt="软件设置" style="max-height:600px;"/>

<p>终止 <code>BlackBox</code>。</p>
<img data-src="/images/24-4.jpg" alt="BlackBox设置" style="max-height:600px;"/>

<p>再次打开 <code>BlackBox</code> 的 <code>软件设置</code>，打开 <code>模块管理</code>，点击右下角的加号，选择 <code>TrustMeAlready</code>，并勾选。</p>
<img data-src="/images/24-3.jpg" alt="XP管理" style="max-height:600px;"/>

<p>打开 <code>XNET</code>，<code>导出 CA 证书</code>。</p>
<img data-src="/images/24-5.jpg" alt="VNET" style="max-height:600px;"/>

<p>进入设置，搜索证书，选择 <code>CA 证书</code> 进入，一般在 <code>安全</code> &gt; <code>证书管理</code> 中找到。</p>
<img data-src="/images/24-6.jpg" alt="证书搜索" style="max-height:600px;"/>

<p>然后选择 <code>安装 CA 证书</code>，成功后，可在用户栏下找到刚才导入的 <code>VNETTECH</code> 证书。</p>
<img data-src="/images/24-7.jpg" alt="用户证书" style="max-height:600px;"/>

<p>最后回到 <code>VNET</code> 中，点击右下角的加号，开始抓包。</p>
<img data-src="/images/24-8.jpg" alt="VNET抓包" style="max-height:600px;"/>

<p>进入 <code>BlackBox</code>，打开需要抓包的软件即可。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>xposed</tag>
        <tag>blackbox</tag>
      </tags>
  </entry>
  <entry>
    <title>备份还原 ubuntu 镜像</title>
    <url>/2020/07/24/backup-and-restore-ubuntu-image/</url>
    <content><![CDATA[<h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>通过以下命令查看磁盘</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">diskutil list</span><br></pre></td></tr></table></figure>

<p>运行下面的命令进行打包，将 <code>N</code> 替换为上面查到的号码，等待完成即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">dd</span> bs=1m <span class="keyword">if</span>=/dev/rdiskN of=ubuntu.img</span><br></pre></td></tr></table></figure>

<h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><p>一般来说，上面打包的生成的 <code>.img</code> 大小为 <code>TF</code> 卡容量，若写入小容量卡会发生错误，所以要清除无用的空间。</p>
<p>如果是 <code>linux</code> 系统，可以跳过这一步，直接执行下方的命令，<code>windows</code> 以及 <code>mac</code> 可使用 <code>docker</code> 来执行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> --privileged -v $(<span class="built_in">pwd</span>):/shrink ubuntu:20.04</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install parted</span><br><span class="line"><span class="built_in">cd</span> /shrink</span><br><span class="line">./pishrink.sh in.img out.img</span><br></pre></td></tr></table></figure>

<p>等待完成后，发现 <code>.img</code> 有明显的缩小。</p>
<h2 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">dd</span> bs=1m <span class="keyword">if</span>=ubuntu.img of=/dev/rdiskN</span><br></pre></td></tr></table></figure>

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RyZXdzaWYvUGlTaHJpbms=">Drewsif&#x2F;PiShrink<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>raspberry pi</tag>
        <tag>pishrink</tag>
      </tags>
  </entry>
  <entry>
    <title>生成 GitLab EE 许可证</title>
    <url>/2020/01/19/crack-gitlab/</url>
    <content><![CDATA[<p><strong>基于 <code>gitlab-ee:12.6.4-ee</code></strong></p>
<h2 id="创建-ruby-docker-镜像"><a href="#创建-ruby-docker-镜像" class="headerlink" title="创建 ruby docker 镜像"></a>创建 ruby docker 镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> ruby /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="生成许可证"><a href="#生成许可证" class="headerlink" title="生成许可证"></a>生成许可证</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gem install gitlab-license</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; license.rb</span><br></pre></td></tr></table></figure>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&quot;openssl&quot;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&quot;gitlab/license&quot;</span></span><br><span class="line"></span><br><span class="line">key_pair = <span class="title class_">Open</span>SSL::<span class="title class_">PKey</span><span class="symbol">:</span><span class="symbol">:RSA</span>.generate(<span class="number">2048</span>)</span><br><span class="line"><span class="title class_">File</span>.open(<span class="string">&quot;license_key&quot;</span>, <span class="string">&quot;w&quot;</span>) &#123; |<span class="params">f</span>| f.write(key_pair.to_pem) &#125;</span><br><span class="line"></span><br><span class="line">public_key = key_pair.public_key</span><br><span class="line"><span class="title class_">File</span>.open(<span class="string">&quot;license_key.pub&quot;</span>, <span class="string">&quot;w&quot;</span>) &#123; |<span class="params">f</span>| f.write(public_key.to_pem) &#125;</span><br><span class="line"></span><br><span class="line">private_key = <span class="title class_">OpenSSL::PKey::RSA</span>.new <span class="title class_">File</span>.read(<span class="string">&quot;license_key&quot;</span>)</span><br><span class="line"><span class="title class_">Gitlab</span><span class="symbol">:</span><span class="symbol">:License</span>.encryption_key = private_key</span><br><span class="line"></span><br><span class="line">license = <span class="title class_">Gitlab</span><span class="symbol">:</span><span class="symbol">:License</span>.new</span><br><span class="line">license.licensee = &#123;</span><br><span class="line">  <span class="string">&quot;Name&quot;</span> =&gt; <span class="string">&quot;none&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Company&quot;</span> =&gt; <span class="string">&quot;none&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Email&quot;</span> =&gt; <span class="string">&quot;example@test.com&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">license.starts_at = <span class="title class_">Date</span>.new(<span class="number">2020</span>, <span class="number">1</span>, <span class="number">1</span>) <span class="comment"># 开始时间</span></span><br><span class="line">license.expires_at = <span class="title class_">Date</span>.new(<span class="number">2050</span>, <span class="number">1</span>, <span class="number">1</span>) <span class="comment"># 结束时间</span></span><br><span class="line">license.notify_admins_at = <span class="title class_">Date</span>.new(<span class="number">2049</span>, <span class="number">12</span>, <span class="number">1</span>)</span><br><span class="line">license.notify_users_at = <span class="title class_">Date</span>.new(<span class="number">2049</span>, <span class="number">12</span>, <span class="number">1</span>)</span><br><span class="line">license.block_changes_at = <span class="title class_">Date</span>.new(<span class="number">2050</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">license.restrictions = &#123;</span><br><span class="line">  <span class="symbol">active_user_count:</span> <span class="number">10000</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">puts <span class="string">&quot;License:&quot;</span></span><br><span class="line">puts license</span><br><span class="line"></span><br><span class="line">data = license.export</span><br><span class="line">puts <span class="string">&quot;Exported license:&quot;</span></span><br><span class="line">puts data</span><br><span class="line"><span class="title class_">File</span>.open(<span class="string">&quot;GitLabBV.gitlab-license&quot;</span>, <span class="string">&quot;w&quot;</span>) &#123; |<span class="params">f</span>| f.write(data) &#125;</span><br><span class="line"></span><br><span class="line">public_key = <span class="title class_">OpenSSL::PKey::RSA</span>.new <span class="title class_">File</span>.read(<span class="string">&quot;license_key.pub&quot;</span>)</span><br><span class="line"><span class="title class_">Gitlab</span><span class="symbol">:</span><span class="symbol">:License</span>.encryption_key = public_key</span><br><span class="line"></span><br><span class="line">data = <span class="title class_">File</span>.read(<span class="string">&quot;GitLabBV.gitlab-license&quot;</span>)</span><br><span class="line"><span class="variable">$license</span> = <span class="title class_">Gitlab</span><span class="symbol">:</span><span class="symbol">:License</span>.import(data)</span><br><span class="line"></span><br><span class="line">puts <span class="string">&quot;Imported license:&quot;</span></span><br><span class="line">puts <span class="variable">$license</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unless</span> <span class="variable">$license</span></span><br><span class="line">  <span class="keyword">raise</span> <span class="string">&quot;The license is invalid.&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$license</span>.restricted?(<span class="symbol">:active_user_count</span>)</span><br><span class="line">  active_user_count = <span class="number">10000</span></span><br><span class="line">  <span class="keyword">if</span> active_user_count &gt; <span class="variable">$license</span>.restrictions[<span class="symbol">:active_user_count</span>]</span><br><span class="line">    <span class="keyword">raise</span> <span class="string">&quot;The active user count exceeds the allowed amount!&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$license</span>.notify_admins?</span><br><span class="line">  puts <span class="string">&quot;The license is due to expire on <span class="subst">#&#123;<span class="variable">$license</span>.expires_at&#125;</span>.&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$license</span>.notify_users?</span><br><span class="line">  puts <span class="string">&quot;The license is due to expire on <span class="subst">#&#123;<span class="variable">$license</span>.expires_at&#125;</span>.&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> <span class="title class_">Gitlab</span></span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">GitAccess</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">cmd, changes = <span class="literal">nil</span></span>)</span><br><span class="line">      <span class="keyword">if</span> <span class="variable">$license</span>.block_changes?</span><br><span class="line">        <span class="keyword">return</span> build_status_object(<span class="literal">false</span>, <span class="string">&quot;License expired&quot;</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">puts <span class="string">&quot;This instance of GitLab Enterprise Edition is licensed to:&quot;</span></span><br><span class="line"><span class="variable">$license</span>.licensee.each <span class="keyword">do</span> |<span class="params">key, value</span>|</span><br><span class="line">  puts <span class="string">&quot;<span class="subst">#&#123;key&#125;</span>: <span class="subst">#&#123;value&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$license</span>.expired?</span><br><span class="line">  puts <span class="string">&quot;The license expired on <span class="subst">#&#123;<span class="variable">$license</span>.expires_at&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elsif</span> <span class="variable">$license</span>.will_expire?</span><br><span class="line">  puts <span class="string">&quot;The license will expire on <span class="subst">#&#123;<span class="variable">$license</span>.expires_at&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  puts <span class="string">&quot;The license will never expire.&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby license.rb</span><br></pre></td></tr></table></figure>

<p>生成 <code>GitLabBV.gitlab-license</code> <code>license_key</code> <code>license_key.pub</code> 这三个文件。</p>
<h2 id="使用许可证"><a href="#使用许可证" class="headerlink" title="使用许可证"></a>使用许可证</h2><p>用 <code>license_key.pub</code> 文件替换 <code>/opt/gitlab/embedded/service/gitlab-rails/.license_encryption_key.pub</code>。</p>
<p><code>GitLabBV.gitlab-license</code> 即是许可证，填入 <code>$&#123;address&#125;/admin/license</code> 地址并重启。</p>
<h2 id="修改等级"><a href="#修改等级" class="headerlink" title="修改等级"></a>修改等级</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- /opt/gitlab/embedded/service/gitlab-rails/ee/app/models/license.rb</span></span><br><span class="line"><span class="comment">+++ /opt/gitlab/embedded/service/gitlab-rails/ee/app/models/license.rb</span></span><br><span class="line"><span class="meta">@@ -367,7 +367,7 @@</span></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def plan</span><br><span class="line"><span class="deletion">-    restricted_attr(:plan).presence || STARTER_PLAN</span></span><br><span class="line"><span class="addition">+    restricted_attr(:plan).presence || ULTIMATE_PLAN</span></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def edition</span><br></pre></td></tr></table></figure>

<p>修改完成后使用 <code>gitlab-ctl reconfigure</code> 重新加载配置。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVieWRvYy5pbmZvL2dlbXMvZ2l0bGFiLWxpY2Vuc2UvMS4wLjAvZmlsZS9SRUFETUUubWQ=">https://www.rubydoc.info/gems/gitlab-license/1.0.0/file/README.md<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
        <tag>crack</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 telepresence 调试 k8s 线上环境</title>
    <url>/2024/03/19/debug-with-telepresence/</url>
    <content><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>安装请看 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2V0YW1iYXNzYWRvci5pby9kb2NzL3RlbGVwcmVzZW5jZS9sYXRlc3QvaW5zdGFsbA==">官方文档<i class="fa fa-external-link-alt"></i></span></p>
<p>需要注意的是文档内所用的版本是 <code>Pro版</code>，与 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RlbGVwcmVzZW5jZWlvL3RlbGVwcmVzZW5jZQ==">Github<i class="fa fa-external-link-alt"></i></span> <code>Release</code> 中下载的 <code>开源版</code> 非同一版本。</p>
<p>以下使用的版本为 <code>v2.19.0</code> <code>Pro版</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在本机配置 <code>Kubectl</code> <code>Context</code> 并使用 <code>kubectl config use-context dev</code> 切换到指定集群，或者直接在线上服务器执行以下命令安装 <code>Traffic Manager</code>；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">telepresence helm install</span><br></pre></td></tr></table></figure>

<p>安装参数请参考 <span class="exturl" data-url="aHR0cHM6Ly9hcnRpZmFjdGh1Yi5pby9wYWNrYWdlcy9oZWxtL2RhdGF3aXJlL3RlbGVwcmVzZW5jZQ==">ArtifactHub<i class="fa fa-external-link-alt"></i></span></p>
<p>安装完成后 <code>kubectl get pod -n ambassador</code> 查看状态：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">NAME                                                READY   STATUS    RESTARTS   AGE</span><br><span class="line">traffic-manager-ambassador-agent-56654cffd7-8qqdh   1/1     Running   0          46s</span><br><span class="line">traffic-manager-5b77fb5-62lr4                       1/1     Running   0          46s</span><br></pre></td></tr></table></figure>

<h2 id="连接集群"><a href="#连接集群" class="headerlink" title="连接集群"></a>连接集群</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">telepresence connect --namespace biz # 指定 namespace</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Launching Telepresence User Daemon</span><br><span class="line">Launching Telepresence Root Daemon</span><br><span class="line">...</span><br><span class="line">Connected to context dev, namespace biz (https://10.x.x.x:6443)</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">telepresence list</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">bill              : ready to intercept (traffic-agent not yet installed)</span><br></pre></td></tr></table></figure>

<h2 id="拦截转发流量"><a href="#拦截转发流量" class="headerlink" title="拦截转发流量"></a>拦截转发流量</h2><p>查看指定服务的 <code>yaml</code> 配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl get svc -n biz bill -o yaml</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">bill</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">biz</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="number">10.43</span><span class="number">.57</span><span class="number">.126</span></span><br><span class="line">  <span class="attr">clusterIPs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.43</span><span class="number">.57</span><span class="number">.126</span></span><br><span class="line">  <span class="attr">internalTrafficPolicy:</span> <span class="string">Cluster</span></span><br><span class="line">  <span class="attr">ipFamilies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IPv4</span></span><br><span class="line">  <span class="attr">ipFamilyPolicy:</span> <span class="string">SingleStack</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">10000</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">grpc</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">81</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">10000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">bill</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure>

<p>可以看到 <code>bill</code> 服务中监听了 <code>10000</code> 端口，所以拦截时指定 <code>10000:10000</code>（<code>&lt;local port&gt;:&lt;remote port&gt;</code>）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">telepresence intercept bill -p 10000:10000</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Using Deployment bill</span><br><span class="line">   Intercept name         : bill</span><br><span class="line">   State                  : ACTIVE</span><br><span class="line">   Workload kind          : Deployment</span><br><span class="line">   Destination            : 127.0.0.1:10000</span><br><span class="line">   Service Port Identifier: port</span><br><span class="line">   Volume Mount Error     : sshfs is not installed on your local machine</span><br><span class="line">   Intercepting           : all TCP requests</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl describe pod -n biz bill-779b9c6bf7-mdmv6</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Init Containers:</span><br><span class="line">  tel-agent-init:</span><br><span class="line">    Container ID:  containerd://a8c5d0eff4714d77b8299ebe698dfe7907f521524f8ca267e9a1c24958e3ed9d</span><br><span class="line">    Image:         docker.io/datawire/ambassador-telepresence-agent:1.14.5</span><br><span class="line">    Image ID:      docker.io/datawire/ambassador-telepresence-agent@sha256:3f6f3076b1eca26c460ef166993c3d9e7527fcc2a3d74709e01869a39cfebd91</span><br><span class="line">    Port:          &lt;none&gt;</span><br><span class="line">    Host Port:     &lt;none&gt;</span><br><span class="line">    Args:</span><br><span class="line">      agent-init</span><br><span class="line">    State:          Terminated</span><br><span class="line">      Reason:       Completed</span><br><span class="line">      Exit Code:    0</span><br><span class="line">      Started:      Tue, 19 Mar 2024 10:02:21 +0800</span><br><span class="line">      Finished:     Tue, 19 Mar 2024 10:02:21 +0800</span><br><span class="line">    Ready:          True</span><br><span class="line"></span><br><span class="line">Containers:</span><br><span class="line">  bill:</span><br><span class="line">    Container ID:   containerd://e43df533e5f3834fcb9d7f5b62bef63b6a01375a3d94cee3f2a5ef8c83592966</span><br><span class="line">    Image:          ...</span><br><span class="line">    Image ID:       ...</span><br><span class="line">    Port:           10000/TCP</span><br><span class="line">    Host Port:      0/TCP</span><br><span class="line">    State:          Running</span><br><span class="line">    Ready:          True</span><br><span class="line"></span><br><span class="line">  traffic-agent:</span><br><span class="line">    Container ID:  containerd://356cdc8b7f423871907778085f43804a5e6c19c98884b0342e88b073d4926c8a</span><br><span class="line">    Image:         docker.io/datawire/ambassador-telepresence-agent:1.14.5</span><br><span class="line">    Image ID:      docker.io/datawire/ambassador-telepresence-agent@sha256:3f6f3076b1eca26c460ef166993c3d9e7527fcc2a3d74709e01869a39cfebd91</span><br><span class="line">    Port:          9900/TCP</span><br><span class="line">    Host Port:     0/TCP</span><br><span class="line">    Args:</span><br><span class="line">      agent</span><br><span class="line">    State:          Running</span><br><span class="line">      Started:      Tue, 19 Mar 2024 10:02:22 +0800</span><br><span class="line">    Ready:          True</span><br></pre></td></tr></table></figure>

<p>然后访问远程集群地址 <code>https://10.x.x.x:8888/bill/_health</code> 可以看到流量已经转发到本地的 <code>10000</code> 端口。</p>
<h2 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">telepresence leave bill # stop `bill` intercept</span><br><span class="line"></span><br><span class="line">telepresence quit -s # stop all local telepresence daemons</span><br></pre></td></tr></table></figure>

<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2V0YW1iYXNzYWRvci5pby9kb2NzL3RlbGVwcmVzZW5jZQ==">https://www.getambassador.io/docs/telepresence<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>telepresence</tag>
        <tag>intercept</tag>
      </tags>
  </entry>
  <entry>
    <title>部署 Docker Registry</title>
    <url>/2023/07/21/deploy-docker-regsitry/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name registry \</span><br><span class="line">  --restart always \</span><br><span class="line">  -p 5000:5000 \</span><br><span class="line">  -v &quot;$&#123;STORAGE_DATA_DIR&#125;/registry&quot;:/var/lib/registry \</span><br><span class="line">  registry:2.8.2</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">  --name registry-ui \</span><br><span class="line">  --restart always \</span><br><span class="line">  -p 5001:80 \</span><br><span class="line">  -e SINGLE_REGISTRY=true \</span><br><span class="line">  -e SHOW_CONTENT_DIGEST=true \</span><br><span class="line">  -e NGINX_PROXY_PASS_URL=&quot;http://$&#123;REGISTER_IP_ADDR&#125;:5000&quot; \</span><br><span class="line">  joxit/docker-registry-ui:2.5.0</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>registry</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 GitHub Actions 部署 Hexo</title>
    <url>/2020/04/10/deploy-hexo-with-github-actions/</url>
    <content><![CDATA[<p>首先需要在 <code>GitHub</code> 上建立两个仓库，一个 <code>公有</code>，一个 <code>私有</code>。</p>
<p><code>公有</code> 仓库用于存放 <code>Hexo</code> 生成的静态文件以部署 <code>GitHub Pages</code>。</p>
<p><code>私有</code> 仓库用于存放未经编译的 <code>Hexo</code> 文件。</p>
<p>示例：<code>starudream/blog-page</code> 为我的 <code>公有</code> 仓库，<code>starudream/blog</code> 是我的 <code>私有</code> 仓库。</p>
<p>然后在 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3Rva2Vucw==">https://github.com/settings/tokens<i class="fa fa-external-link-alt"></i></span> 申请 <code>PAT</code>，并将其加入私有仓库的 <code>Secrets</code>。</p>
<p>最后在 <code>私有</code> 仓库内创建文件 <code>.github/workflows/deploy.yml</code>，修改相应内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Page</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">starudream/blog-page</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">.deploy_git</span></span><br><span class="line">          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.PAGE_PAT</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="number">12</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g &amp;&amp; npm install &amp;&amp; npm run build</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          rm -rf .deploy_git/* &amp;&amp; cp -rf public/* .deploy_git/</span></span><br><span class="line"><span class="string">          git config --global user.name starudream</span></span><br><span class="line"><span class="string">          git config --global user.email justwangsheng@qq.com</span></span><br><span class="line"><span class="string">          message=$(git log -1 --pretty=format:%s)</span></span><br><span class="line"><span class="string">          cd .deploy_git</span></span><br><span class="line"><span class="string">          git add -A</span></span><br><span class="line"><span class="string">          git commit -m &quot;$message&quot;</span></span><br><span class="line"><span class="string">          git push</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>部署 NFS 服务</title>
    <url>/2023/07/21/deploy-nfs-server/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install nfs-utils</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul>
<li><code>/etc/exports</code></li>
</ul>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">/data/nfs/iso *(rw,sync,no_subtree_check,no_root_squash)</span><br></pre></td></tr></table></figure>

<ul>
<li>man: <span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kaWUubmV0L21hbi81L2V4cG9ydHM=">https://linux.die.net/man/5/exports<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start nfs-server.service</span><br><span class="line">systemctl enable nfs-server.service</span><br><span class="line">systemctl status nfs-server.service</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>nfs</tag>
        <tag>server</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 ACME.sh 签发 SSL 泛域名证书</title>
    <url>/2020/04/10/deploy-ssl-with-acme/</url>
    <content><![CDATA[<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~/.acme.sh/acme.sh \</span><br><span class="line">  --debug \</span><br><span class="line">  --issue \</span><br><span class="line">  --dns dns_dp \</span><br><span class="line">  -d *.starudream.cn</span><br><span class="line"></span><br><span class="line">~/.acme.sh/acme.sh \</span><br><span class="line">  --debug \</span><br><span class="line">  --install-cert \</span><br><span class="line">  -d *.starudream.cn \</span><br><span class="line">  --fullchain-file <span class="string">&#x27;/usr/local/openresty/nginx/conf/ssl/*.starudream.cn.crt&#x27;</span> \</span><br><span class="line">  --key-file <span class="string">&#x27;/usr/local/openresty/nginx/conf/ssl/*.starudream.cn.key&#x27;</span> \</span><br><span class="line">  --reloadcmd <span class="string">&#x27;service nginx reload&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="nginx-配置文件"><a href="#nginx-配置文件" class="headerlink" title="nginx 配置文件"></a>nginx 配置文件</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line">  <span class="attribute">listen</span> [::]:<span class="number">443</span> ssl http2;</span><br><span class="line">  <span class="attribute">ssl_certificate</span> /usr/local/openresty/nginx/conf/ssl/<span class="regexp">*.starudream.cn.crt</span>;</span><br><span class="line">  <span class="attribute">ssl_certificate_key</span> /usr/local/openresty/nginx/conf/ssl/<span class="regexp">*.starudream.cn.key</span>;</span><br><span class="line">  <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span> TLSv1.<span class="number">3</span>;</span><br><span class="line">  <span class="attribute">ssl_ciphers</span> TLS13-AES-<span class="number">256</span>-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-<span class="number">128</span>-GCM-SHA256:TLS13-AES-<span class="number">128</span>-CCM-<span class="number">8</span>-SHA256:TLS13-AES-<span class="number">128</span>-CCM-SHA256:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;</span><br><span class="line">  <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line">  <span class="attribute">ssl_session_cache</span> builtin:<span class="number">1000</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">  <span class="attribute">ssl_buffer_size</span> <span class="number">1400</span>;</span><br><span class="line">  <span class="attribute">add_header</span> Strict-Transport-Security max-age=<span class="number">15768000</span>;</span><br><span class="line">  <span class="attribute">ssl_stapling</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">ssl_stapling_verify</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">server_name</span> test.starudream.cn;</span><br><span class="line">  <span class="attribute">access_log</span> /data/wwwlogs/test.starudream.cn_nginx.log combined;</span><br><span class="line">  <span class="attribute">index</span> index.html;</span><br><span class="line">  <span class="attribute">root</span> /data/wwwroot/default;</span><br><span class="line">  <span class="attribute">if</span> (<span class="variable">$ssl_protocol</span> = <span class="string">&quot;&quot;</span>) &#123; <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FjbWVzaC1vZmZpY2lhbC9hY21lLnNo">https://github.com/acmesh-official/acme.sh<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>acme</tag>
        <tag>ssl</tag>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Docker 部署私有 Derper</title>
    <url>/2024/03/06/deploy-tailscale-derper-with-docker/</url>
    <content><![CDATA[<p>自建 <code>Tailscale</code> 的 <code>Derper</code> 节点并开启认证，需要在 <code>Derper</code> 节点也安装 <code>Tailscale</code> 客户端。</p>
<h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">tailscale:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailscale/tailscale</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">tailscale</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./tailscale/data:/var/lib/tailscale&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./tailscale/tmp:/tmp&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/dev/net/tun:/dev/net/tun&quot;</span></span><br><span class="line">    <span class="attr">cap_add:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">net_admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sys_module</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TS_AUTHKEY:</span> <span class="string">&quot;从 https://login.tailscale.com/admin/settings/keys 获取&quot;</span></span><br><span class="line">      <span class="attr">TS_STATE_DIR:</span> <span class="string">&quot;/var/lib/tailscale&quot;</span></span><br><span class="line">      <span class="attr">TS_USERSPACE:</span> <span class="string">&quot;false&quot;</span></span><br><span class="line">  <span class="attr">derper:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">starudream/derper</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">derper</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">/tailscale/derper</span> <span class="string">-a</span> <span class="string">:80</span> <span class="string">-verify-clients</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">tailscale</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3478:3478/udp&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./tailscale/tmp:/var/run/tailscale&quot;</span></span><br></pre></td></tr></table></figure>

<p><code>Derper</code> 的镜像请 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N0YXJ1ZHJlYW0vZG9ja2VyLWltYWdl">于此<i class="fa fa-external-link-alt"></i></span> 查看。</p>
<p>当前版本 <code>1.60.1</code> 中 <code>tailscaled.sock</code> 在 <code>var/run/tailscale/tailscaled.sock</code> 只是一个指向 <code>/tmp/tailscaled.sock</code> 的链接。</p>
<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>不使用 <code>Derper</code> 内置 <code>SSL</code> 证书，使用 <code>nginx</code> 反向代理，需要注意 <code>proxy_set_header Upgrade $http_upgrade;</code> 开启 <code>Websocket</code>。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="comment"># ...</span></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://derper:80;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-PORT <span class="variable">$remote_port</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    <span class="comment"># websocket</span></span><br><span class="line">    <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Access-Controls"><a href="#Access-Controls" class="headerlink" title="Access Controls"></a>Access Controls</h2><p>最后在 <span class="exturl" data-url="aHR0cHM6Ly9sb2dpbi50YWlsc2NhbGUuY29tL2FkbWluL2FjbHMvZmlsZQ==">https://login.tailscale.com/admin/acls/file<i class="fa fa-external-link-alt"></i></span> 修改配置文件，添加 <span class="exturl" data-url="aHR0cHM6Ly9wa2cuZ28uZGV2L3RhaWxzY2FsZS5jb20vdGFpbGNmZyNERVJQTWFw">DERPMap<i class="fa fa-external-link-alt"></i></span> 配置。</p>
<p><code>OmitDefaultRegions</code> 会忽略官方的 <code>Derper</code> 节点，自建建议开启以保护隐私。</p>
<p>下面的配置文件示例，分成内网与公网两个配置，<code>Tailscale</code> 客户端会通过延迟自动选择使用内网还是公网。</p>
<p><code>Nodes</code> 内详细配置请看 <span class="exturl" data-url="aHR0cHM6Ly9wa2cuZ28uZGV2L3RhaWxzY2FsZS5jb20vdGFpbGNmZyNERVJQTm9kZQ==">DERPNode<i class="fa fa-external-link-alt"></i></span>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // ... acls ssh</span><br><span class="line">	&quot;derpMap&quot;: &#123;</span><br><span class="line">		&quot;OmitDefaultRegions&quot;: true,</span><br><span class="line">		&quot;Regions&quot;: &#123;</span><br><span class="line">			&quot;900&quot;: &#123;</span><br><span class="line">				&quot;RegionID&quot;:   900,</span><br><span class="line">				&quot;RegionCode&quot;: &quot;private&quot;,</span><br><span class="line">				&quot;Nodes&quot;: [</span><br><span class="line">					&#123;</span><br><span class="line">						&quot;Name&quot;:     &quot;private-aliyun&quot;,</span><br><span class="line">						&quot;RegionID&quot;: 900,</span><br><span class="line">						&quot;HostName&quot;: &quot;derper.52xckl.cn&quot;,</span><br><span class="line">						&quot;IPV4&quot;:     &quot;内网ip 172.17.0.1&quot;,</span><br><span class="line">						&quot;STUNPort&quot;: 3478,</span><br><span class="line">						&quot;DERPPort&quot;: 443</span><br><span class="line">					&#125;</span><br><span class="line">				]</span><br><span class="line">			&#125;,</span><br><span class="line">			&quot;901&quot;: &#123;</span><br><span class="line">				&quot;RegionID&quot;:   901,</span><br><span class="line">				&quot;RegionCode&quot;: &quot;public&quot;,</span><br><span class="line">				&quot;Nodes&quot;: [</span><br><span class="line">					&#123;</span><br><span class="line">						&quot;Name&quot;:     &quot;public-aliyun&quot;,</span><br><span class="line">						&quot;RegionID&quot;: 901,</span><br><span class="line">						&quot;HostName&quot;: &quot;derper.52xckl.cn&quot;,</span><br><span class="line">						&quot;IPV4&quot;:     &quot;公网ip&quot;,</span><br><span class="line">						&quot;STUNPort&quot;: 3478,</span><br><span class="line">						&quot;DERPPort&quot;: 443</span><br><span class="line">					&#125;</span><br><span class="line">				]</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it tailscale tailscale netcheck</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Report:</span><br><span class="line">	* UDP: true</span><br><span class="line">	* IPv4: yes, 172.19.0.1:34143</span><br><span class="line">	* IPv6: no, unavailable in OS</span><br><span class="line">	* MappingVariesByDestIP: true</span><br><span class="line">	* HairPinning: false</span><br><span class="line">	* PortMapping:</span><br><span class="line">	* Nearest DERP:</span><br><span class="line">	* DERP latency:</span><br><span class="line">		- private: 200µs   ()</span><br><span class="line">		- public: 3.1ms   ()</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it tailscale tailscale ping &lt;node name&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">pong from &lt;node name&gt; (&lt;node ip&gt;) via DERP(public) in 11ms</span><br><span class="line">pong from &lt;node name&gt; (&lt;node ip&gt;) via DERP(public) in 11ms</span><br><span class="line">pong from &lt;node name&gt; (&lt;node ip&gt;) via DERP(public) in 11ms</span><br></pre></td></tr></table></figure>

<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly90YWlsc2NhbGUuY29tL2tiLzExMTgvY3VzdG9tLWRlcnAtc2VydmVycw==">https://tailscale.com/kb/1118/custom-derp-servers<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Docker 部署 TeamSpeak 3</title>
    <url>/2020/04/14/deploy-teamspeak/</url>
    <content><![CDATA[<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name teamspeak \</span><br><span class="line">    --restart always \</span><br><span class="line">    -p 9987:9987/udp \</span><br><span class="line">    -v /opt/docker/teamspeak:/var/ts3server \</span><br><span class="line">    -e TS3SERVER_LICENSE=accept \</span><br><span class="line">    -e TS3SERVER_SERVERADMIN_PASSWORD=PLACEHOLD \</span><br><span class="line">    teamspeak:latest</span><br></pre></td></tr></table></figure>

<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>使用以下命令查看 <code>Query Admin Account</code> 相关登录用户密码以及 <code>Privilege Key</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs teamspeak</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>teamspeak</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 禁用 IPV6</title>
    <url>/2020/04/15/disable-ipv6-linux/</url>
    <content><![CDATA[<h2 id="验证是否开启-ipv6"><a href="#验证是否开启-ipv6" class="headerlink" title="验证是否开启 ipv6"></a>验证是否开启 ipv6</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ifconfig -a | grep inet6</span></span><br><span class="line">inet6 fe80::42:b8ff:feb5:4214  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">inet6 fe80::5054:ff:fec3:d3bb  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br></pre></td></tr></table></figure>

<p>出现 <code>inet6</code> 相关即为开启 <code>ipv6</code>。</p>
<h2 id="修改内核模块配置"><a href="#修改内核模块配置" class="headerlink" title="修改内核模块配置"></a>修改内核模块配置</h2><p>编辑 <code>/etc/default/grub</code> 文件并在 <code>GRUB_CMDLINE_LINUX</code> 中添加 <code>ipv6.disable=1</code>。</p>
<p>如果是 <code>Ubuntu</code> 可能还有 <code>GRUB_CMDLINE_LINUX_DEFAULT</code>，同样也需要添加 <code>ipv6.disable=1</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat /etc/default/grub</span></span><br><span class="line">......</span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;crashkernel=auto console=ttyS0 console=tty0 panic=5 net.ifnames=0 biosdevname=0 intel_idle.max_cstate=1 intel_pstate=disable&quot;</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>修改后为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat /etc/default/grub</span></span><br><span class="line">......</span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;crashkernel=auto console=ttyS0 console=tty0 panic=5 net.ifnames=0 biosdevname=0 intel_idle.max_cstate=1 intel_pstate=disable ipv6.disable=1&quot;</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<h2 id="应用更改"><a href="#应用更改" class="headerlink" title="应用更改"></a>应用更改</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">update-grub</span><br></pre></td></tr></table></figure>

<h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shutdown -r now</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>centos</tag>
        <tag>ipv6</tag>
      </tags>
  </entry>
  <entry>
    <title>elk 常见问题</title>
    <url>/2024/02/19/elk-common-problem/</url>
    <content><![CDATA[<h2 id="common"><a href="#common" class="headerlink" title="common"></a>common</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">method=$1</span><br><span class="line">if [ -z &quot;$method&quot; ]; then</span><br><span class="line">  method=&quot;GET&quot;</span><br><span class="line">fi</span><br><span class="line">path=$2</span><br><span class="line">if [[ $path == *\?* ]]; then</span><br><span class="line">  path=&quot;$path&amp;pretty&quot;</span><br><span class="line">else</span><br><span class="line">  path=&quot;$path?pretty&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">curl -v -u &quot;elastic:p1ssw0rd&quot; -X &quot;$method&quot; -H &quot;Content-Type: application/json&quot; &quot;$&#123;@:2&#125;&quot; &quot;http://localhost:9200/$path&quot;</span><br></pre></td></tr></table></figure>

<h2 id="index-setting"><a href="#index-setting" class="headerlink" title="index setting"></a>index setting</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./curl.sh PUT _index_template/logstash -d &#x27;&#123;</span><br><span class="line">  &quot;template&quot;: &#123;</span><br><span class="line">    &quot;settings&quot;: &#123;</span><br><span class="line">      &quot;index&quot;: &#123;</span><br><span class="line">        &quot;lifecycle&quot;: &#123;</span><br><span class="line">          &quot;name&quot;: &quot;90-days-default&quot;,</span><br><span class="line">          &quot;rollover_alias&quot;: &quot;90days&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;refresh_interval&quot;: &quot;5s&quot;,</span><br><span class="line">        &quot;number_of_replicas&quot;: &quot;0&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;index_patterns&quot;: [</span><br><span class="line">    &quot;logstash-*&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="index-health-is-yellow"><a href="#index-health-is-yellow" class="headerlink" title="index health is yellow"></a>index health is yellow</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./curl.sh PUT _settings -d &#x27;&#123;</span><br><span class="line">  &quot;index.number_of_replicas&quot;: 0</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="index-has-exceeded-1000000-maximum-allowed-to-be-analyzed-for-highlighting"><a href="#index-has-exceeded-1000000-maximum-allowed-to-be-analyzed-for-highlighting" class="headerlink" title="index has exceeded [1000000] - maximum allowed to be analyzed for highlighting"></a>index has exceeded [1000000] - maximum allowed to be analyzed for highlighting</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./curl.sh PUT _settings -d &#x27;&#123;</span><br><span class="line">  &quot;index.highlight.max_analyzed_offset&quot;: 100000000</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="this-action-would-add-2-shards-but-this-cluster-currently-has-1000-1000"><a href="#this-action-would-add-2-shards-but-this-cluster-currently-has-1000-1000" class="headerlink" title="this action would add [2] shards, but this cluster currently has [1000]&#x2F;[1000]"></a>this action would add [2] shards, but this cluster currently has [1000]&#x2F;[1000]</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./curl.sh PUT _cluster/settings -d &#x27;&#123;</span><br><span class="line">  &quot;persistent&quot;: &#123;</span><br><span class="line">    &quot;cluster.max_shards_per_node&quot;: 1000000</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="Can’t-store-an-async-search-response-larger-than-10485760-bytes"><a href="#Can’t-store-an-async-search-response-larger-than-10485760-bytes" class="headerlink" title="Can’t store an async search response larger than [10485760] bytes."></a>Can’t store an async search response larger than [10485760] bytes.</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./curl.sh PUT _cluster/settings -d &#x27;&#123;</span><br><span class="line">  &quot;persistent&quot;: &#123;</span><br><span class="line">    &quot;search.max_async_search_response_size&quot;: &quot;50mb&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
        <tag>kibana</tag>
      </tags>
  </entry>
  <entry>
    <title>Envoy 配置导出 YAML 文件</title>
    <url>/2023/03/22/envoy-config-to-yaml/</url>
    <content><![CDATA[<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;bytes&quot;</span></span><br><span class="line">	<span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">	<span class="string">&quot;os&quot;</span></span><br><span class="line">	<span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;gopkg.in/yaml.v3&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;google.golang.org/protobuf/encoding/protojson&quot;</span></span><br><span class="line"></span><br><span class="line">	bootstrap <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/bootstrap/v3&quot;</span></span><br><span class="line">	cluster <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/cluster/v3&quot;</span></span><br><span class="line">	core <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/core/v3&quot;</span></span><br><span class="line">	listener <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/listener/v3&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGenBootstrapYAML</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	cfg, err := initConfig(<span class="string">&quot;config.yaml&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		t.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	b := &amp;bootstrap.Bootstrap&#123;</span><br><span class="line">		Admin: &amp;bootstrap.Admin&#123;</span><br><span class="line">			AccessLog: <span class="literal">nil</span>,</span><br><span class="line">			Address: &amp;core.Address&#123;</span><br><span class="line">				Address: &amp;core.Address_SocketAddress&#123;</span><br><span class="line">					SocketAddress: &amp;core.SocketAddress&#123;</span><br><span class="line">						Address: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">						PortSpecifier: &amp;core.SocketAddress_PortValue&#123;</span><br><span class="line">							PortValue: <span class="number">9901</span>,</span><br><span class="line">						&#125;,</span><br><span class="line">					&#125;,</span><br><span class="line">				&#125;,</span><br><span class="line">			&#125;,</span><br><span class="line">		&#125;,</span><br><span class="line">		StaticResources: &amp;bootstrap.Bootstrap_StaticResources&#123;</span><br><span class="line">			Listeners: <span class="built_in">make</span>([]*listener.Listener, <span class="number">2</span>),</span><br><span class="line">			Clusters:  <span class="built_in">make</span>([]*cluster.Cluster, <span class="built_in">len</span>(cfg.Clusters)),</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	virtualHosts := genVirtualHosts(cfg)</span><br><span class="line"></span><br><span class="line">	b.StaticResources.Listeners[<span class="number">0</span>] = makeListener(ListenerHTTPPort, <span class="literal">false</span>, virtualHosts)</span><br><span class="line">	b.StaticResources.Listeners[<span class="number">1</span>] = makeListener(ListenerHTTPSPort, <span class="literal">true</span>, virtualHosts)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(cfg.Clusters); i++ &#123;</span><br><span class="line">		b.StaticResources.Clusters[i] = makeCluster(cfg.Clusters[i])</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mo := protojson.MarshalOptions&#123;UseProtoNames: <span class="literal">true</span>&#125;</span><br><span class="line"></span><br><span class="line">	bs, err := mo.Marshal(b)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		t.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> v any</span><br><span class="line"></span><br><span class="line">	err = json.Unmarshal(bs, &amp;v)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		t.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bb := &amp;bytes.Buffer&#123;&#125;</span><br><span class="line">	ye := yaml.NewEncoder(bb)</span><br><span class="line">	ye.SetIndent(<span class="number">2</span>)</span><br><span class="line">	<span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; _ = ye.Close() &#125;()</span><br><span class="line"></span><br><span class="line">	err = ye.Encode(v)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		t.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	err = os.WriteFile(<span class="string">&quot;envoy-bootstrap.yaml&quot;</span>, bb.Bytes(), <span class="number">0644</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		t.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>envoy</tag>
        <tag>yaml</tag>
      </tags>
  </entry>
  <entry>
    <title>通过 LUA 记录 Envoy 请求日志</title>
    <url>/2023/03/22/envoy-log-requesst-by-lua/</url>
    <content><![CDATA[<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">trim_prefix</span><span class="params">(s, p)</span></span></span><br><span class="line">    <span class="keyword">return</span> (s:<span class="built_in">sub</span>(<span class="number">0</span>, #p) == p) <span class="keyword">and</span> s:<span class="built_in">sub</span>(#p + <span class="number">1</span>) <span class="keyword">or</span> s</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">envoy_on_request</span><span class="params">(request_handle)</span></span></span><br><span class="line">    <span class="keyword">local</span> idx = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> request_handle:bodyChunks() <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> <span class="built_in">len</span> = chunk:length()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span> == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">local</span> body = chunk:getBytes(idx, <span class="built_in">len</span>)</span><br><span class="line">        idx = idx + <span class="built_in">len</span></span><br><span class="line">        <span class="keyword">local</span> hds = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> <span class="built_in">pairs</span>(request_handle:headers()) <span class="keyword">do</span></span><br><span class="line">            hds[<span class="string">&quot;y-&quot;</span> .. trim_prefix(key, <span class="string">&quot;:&quot;</span>)] = value</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        hds[<span class="string">&quot;:method&quot;</span>] = <span class="string">&quot;POST&quot;</span></span><br><span class="line">        hds[<span class="string">&quot;:path&quot;</span>] = <span class="string">&quot;/log&quot;</span></span><br><span class="line">        hds[<span class="string">&quot;:authority&quot;</span>] = <span class="string">&quot;envoy&quot;</span></span><br><span class="line">        request_handle:httpCall(<span class="string">&quot;http-log-service&quot;</span>, hds, body, <span class="number">10000</span>, <span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">envoy_on_response</span><span class="params">(response_handle)</span></span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">static_resources:</span></span><br><span class="line">  <span class="attr">clusters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http-log-service</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">STRICT_DNS</span></span><br><span class="line">      <span class="attr">connect_timeout:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">load_assignment:</span></span><br><span class="line">        <span class="attr">cluster_name:</span> <span class="string">http-log-service</span></span><br><span class="line">        <span class="attr">endpoints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">                  <span class="attr">address:</span></span><br><span class="line">                    <span class="attr">socket_address:</span></span><br><span class="line">                      <span class="attr">address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">                      <span class="attr">port_value:</span> <span class="number">9709</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>envoy</tag>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>Envoy XDS</title>
    <url>/2023/03/22/envoy-xds/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>该篇文章所展示代码只展示大概思路，部分代码因为涉及到公司内部业务，所以没有展示出来。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul>
<li><code>main.go</code></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;flag&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;net&quot;</span></span><br><span class="line">	<span class="string">&quot;path/filepath&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/google/uuid&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/envoyproxy/go-control-plane/pkg/server/v3&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	_addr    <span class="type">string</span></span><br><span class="line">	_config  <span class="type">string</span></span><br><span class="line"></span><br><span class="line">	VERSION <span class="type">string</span></span><br><span class="line">	BIDTIME <span class="type">string</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">run</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line">	log.Printf(<span class="string">&quot;version: %s, bidtime: %s&quot;</span>, VERSION, BIDTIME)</span><br><span class="line"></span><br><span class="line">	cfg, err := initConfig(_config)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;init config error: %s&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	printConfig(cfg)</span><br><span class="line"></span><br><span class="line">	grpcServer := newGRPCServer()</span><br><span class="line">	envoyCache, envoyServer := newEnvoyServer(ctx)</span><br><span class="line"></span><br><span class="line">	version, err := uuid.NewRandom()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;generate version error: %s&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	snapshot := genSnapshot(cfg, version.String())</span><br><span class="line">	err = snapshot.Consistent()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;snapshot inconsistent: %s&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	err = envoyCache.SetSnapshot(ctx, cfg.Node, snapshot)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;set snapshot error: %s&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	log.Printf(<span class="string">&quot;snapshot version: %s&quot;</span>, version)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; runServer(_addr, grpcServer, envoyServer) &#125;()</span><br><span class="line"></span><br><span class="line">	s := &lt;-sig</span><br><span class="line">	log.Printf(<span class="string">&quot;receive signal: %s&quot;</span>, s)</span><br><span class="line"></span><br><span class="line">	grpcServer.Stop()</span><br><span class="line"></span><br><span class="line">	log.Printf(<span class="string">&quot;bye&quot;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="built_in">close</span>(cls)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">runServer</span><span class="params">(address <span class="type">string</span>, grpcServer *grpc.Server, envoyServer server.Server)</span></span> &#123;</span><br><span class="line">	ln, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, address)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;listen error: %s&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	registerServer(grpcServer, envoyServer)</span><br><span class="line"></span><br><span class="line">	log.Printf(<span class="string">&quot;start grpc server success on %s&quot;</span>, address)</span><br><span class="line"></span><br><span class="line">	err = grpcServer.Serve(ln)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;serve error: %s&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>config.go</code></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Config <span class="keyword">struct</span> &#123;</span><br><span class="line">	Node           <span class="type">string</span>      <span class="string">`json:&quot;node,omitempty&quot; yaml:&quot;node&quot;`</span></span><br><span class="line">	Include        []<span class="type">string</span>    <span class="string">`json:&quot;include,omitempty&quot; yaml:&quot;include&quot;`</span></span><br><span class="line">	Cors           *iCors      <span class="string">`json:&quot;cors,omitempty&quot; yaml:&quot;cors&quot;`</span></span><br><span class="line">	Routes         []*iRoute   <span class="string">`json:&quot;routes,omitempty&quot; yaml:&quot;routes&quot;`</span></span><br><span class="line">	Clusters       []*iCluster <span class="string">`json:&quot;clusters,omitempty&quot; yaml:&quot;clusters&quot;`</span></span><br><span class="line">	TerminalDomain <span class="type">string</span>      <span class="string">`json:&quot;terminal_domain&quot; yaml:&quot;terminal_domain&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iCors <span class="keyword">struct</span> &#123;</span><br><span class="line">	AllowMethods  []<span class="type">string</span> <span class="string">`json:&quot;allow_methods,omitempty&quot; yaml:&quot;allow_methods&quot;`</span></span><br><span class="line">	AllowHeaders  []<span class="type">string</span> <span class="string">`json:&quot;allow_headers,omitempty&quot; yaml:&quot;allow_headers&quot;`</span></span><br><span class="line">	ExposeHeaders []<span class="type">string</span> <span class="string">`json:&quot;expose_headers,omitempty&quot; yaml:&quot;expose_headers&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iRoute <span class="keyword">struct</span> &#123;</span><br><span class="line">	Match               *iRouteMatch    <span class="string">`json:&quot;match,omitempty&quot; yaml:&quot;match&quot;`</span></span><br><span class="line">	Route               *iRouteRoute    <span class="string">`json:&quot;route,omitempty&quot; yaml:&quot;route&quot;`</span></span><br><span class="line">	RequestHeadersToAdd []*iRouteHeader <span class="string">`json:&quot;request_headers_to_add,omitempty&quot; yaml:&quot;request_headers_to_add&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iRouteMatch <span class="keyword">struct</span> &#123;</span><br><span class="line">	Prefix <span class="type">string</span>             <span class="string">`json:&quot;prefix,omitempty&quot; yaml:&quot;prefix&quot;`</span></span><br><span class="line">	Header *iRouteMatchHeader <span class="string">`json:&quot;header,omitempty&quot; yaml:&quot;header&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iRouteMatchHeader <span class="keyword">struct</span> &#123;</span><br><span class="line">	Name       <span class="type">string</span> <span class="string">`json:&quot;name,omitempty&quot; yaml:&quot;name&quot;`</span></span><br><span class="line">	ExactMatch <span class="type">string</span> <span class="string">`json:&quot;exact_match,omitempty&quot; yaml:&quot;exact_match&quot;`</span></span><br><span class="line">	Re2Match   <span class="type">string</span> <span class="string">`json:&quot;re2_match,omitempty&quot; yaml:&quot;re2_match&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iRouteRoute <span class="keyword">struct</span> &#123;</span><br><span class="line">	Cluster            <span class="type">string</span>        <span class="string">`json:&quot;cluster,omitempty&quot; yaml:&quot;cluster&quot;`</span></span><br><span class="line">	Timeout            time.Duration <span class="string">`json:&quot;timeout,omitempty&quot; yaml:&quot;timeout&quot;`</span></span><br><span class="line">	PrefixRewrite      <span class="type">string</span>        <span class="string">`json:&quot;prefix_rewrite,omitempty&quot; yaml:&quot;prefix_rewrite&quot;`</span></span><br><span class="line">	HostRewriteLiteral <span class="type">string</span>        <span class="string">`json:&quot;host_rewrite_literal,omitempty&quot; yaml:&quot;host_rewrite_literal&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iRouteHeader <span class="keyword">struct</span> &#123;</span><br><span class="line">	Header *iKeyValue <span class="string">`json:&quot;header,omitempty&quot; yaml:&quot;header&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iKeyValue <span class="keyword">struct</span> &#123;</span><br><span class="line">	Key   <span class="type">string</span> <span class="string">`json:&quot;key,omitempty&quot; yaml:&quot;key&quot;`</span></span><br><span class="line">	Value <span class="type">string</span> <span class="string">`json:&quot;value,omitempty&quot; yaml:&quot;value&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iCluster <span class="keyword">struct</span> &#123;</span><br><span class="line">	Name     <span class="type">string</span> <span class="string">`json:&quot;name,omitempty&quot; yaml:&quot;name&quot;`</span></span><br><span class="line">	Endpoint <span class="type">string</span> <span class="string">`json:&quot;endpoint,omitempty&quot; yaml:&quot;endpoint&quot;`</span></span><br><span class="line">	Http2    <span class="type">bool</span>   <span class="string">`json:&quot;http2,omitempty&quot; yaml:&quot;http2&quot;`</span></span><br><span class="line">	Https    <span class="type">bool</span>   <span class="string">`json:&quot;https,omitempty&quot; yaml:&quot;https&quot;`</span></span><br><span class="line"></span><br><span class="line">	Host <span class="type">string</span> <span class="string">`json:&quot;host,omitempty&quot; yaml:&quot;host&quot;`</span></span><br><span class="line">	Port <span class="type">uint32</span> <span class="string">`json:&quot;port,omitempty&quot; yaml:&quot;port&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>server.go</code></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc/keepalive&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/envoyproxy/go-control-plane/pkg/cache/v3&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/envoyproxy/go-control-plane/pkg/server/v3&quot;</span></span><br><span class="line"></span><br><span class="line">	discovery <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newGRPCServer</span><span class="params">()</span></span> *grpc.Server &#123;</span><br><span class="line">	grpcServer := grpc.NewServer(</span><br><span class="line">		grpc.MaxConcurrentStreams(<span class="number">1000000</span>),</span><br><span class="line">		grpc.KeepaliveParams(keepalive.ServerParameters&#123;</span><br><span class="line">			Time:    <span class="number">30</span> * time.Second,</span><br><span class="line">			Timeout: <span class="number">3</span> * time.Second,</span><br><span class="line">		&#125;),</span><br><span class="line">		grpc.KeepaliveEnforcementPolicy(keepalive.EnforcementPolicy&#123;</span><br><span class="line">			MinTime:             <span class="number">30</span> * time.Second,</span><br><span class="line">			PermitWithoutStream: <span class="literal">true</span>,</span><br><span class="line">		&#125;),</span><br><span class="line">	)</span><br><span class="line">	<span class="keyword">return</span> grpcServer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newEnvoyServer</span><span class="params">(ctx context.Context)</span></span> (cache.SnapshotCache, server.Server) &#123;</span><br><span class="line">	envoyCache := cache.NewSnapshotCache(<span class="literal">false</span>, cache.IDHash&#123;&#125;, &amp;envoyLogger&#123;&#125;)</span><br><span class="line">	envoyServer := server.NewServer(ctx, envoyCache, <span class="literal">nil</span>)</span><br><span class="line">	<span class="keyword">return</span> envoyCache, envoyServer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">registerServer</span><span class="params">(grpcServer *grpc.Server, envoyServer server.Server)</span></span> &#123;</span><br><span class="line">	discovery.RegisterAggregatedDiscoveryServiceServer(grpcServer, envoyServer)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>resource.go</code></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;strconv&quot;</span></span><br><span class="line">	<span class="string">&quot;strings&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;google.golang.org/protobuf/proto&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/protobuf/types/known/anypb&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/protobuf/types/known/durationpb&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/protobuf/types/known/wrapperspb&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/envoyproxy/go-control-plane/pkg/cache/types&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/envoyproxy/go-control-plane/pkg/cache/v3&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/envoyproxy/go-control-plane/pkg/resource/v3&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/envoyproxy/go-control-plane/pkg/wellknown&quot;</span></span><br><span class="line"></span><br><span class="line">	accesslog <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/accesslog/v3&quot;</span></span><br><span class="line">	cluster <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/cluster/v3&quot;</span></span><br><span class="line">	core <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/core/v3&quot;</span></span><br><span class="line">	endpoint <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/endpoint/v3&quot;</span></span><br><span class="line">	listener <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/listener/v3&quot;</span></span><br><span class="line">	route <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/config/route/v3&quot;</span></span><br><span class="line"></span><br><span class="line">	file <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/access_loggers/file/v3&quot;</span></span><br><span class="line">	gzip <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/compression/gzip/compressor/v3&quot;</span></span><br><span class="line">	compressor <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/compressor/v3&quot;</span></span><br><span class="line">	cors <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/cors/v3&quot;</span></span><br><span class="line">	lua <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/lua/v3&quot;</span></span><br><span class="line">	router <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/router/v3&quot;</span></span><br><span class="line">	hcm <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/http_connection_manager/v3&quot;</span></span><br><span class="line">	tls <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3&quot;</span></span><br><span class="line">	http <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/extensions/upstreams/http/v3&quot;</span></span><br><span class="line"></span><br><span class="line">	matcher <span class="string">&quot;github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">genSnapshot</span><span class="params">(cfg *Config, version <span class="type">string</span>)</span></span> *cache.Snapshot &#123;</span><br><span class="line">	virtualHosts := genVirtualHosts(cfg)</span><br><span class="line">	resources := <span class="keyword">map</span>[resource.Type][]types.Resource&#123;</span><br><span class="line">		resource.ListenerType: &#123;</span><br><span class="line">			makeListener(ListenerHTTPPort, <span class="literal">false</span>, virtualHosts),</span><br><span class="line">			makeListener(ListenerHTTPSPort, <span class="literal">true</span>, virtualHosts),</span><br><span class="line">		&#125;,</span><br><span class="line">		resource.ClusterType: genClusters(cfg.Clusters),</span><br><span class="line">	&#125;</span><br><span class="line">	snap, err := cache.NewSnapshot(version, resources)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;failed to create snapshot: %s&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> snap</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h2 id="envoy-yaml"><a href="#envoy-yaml" class="headerlink" title="envoy.yaml"></a><code>envoy.yaml</code></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --name envoy -v `pwd`/envoy.yaml:/etc/envoy/envoy.yaml -p 9901:9901 -p 10000:10000 envoyproxy/envoy:v1.23-latest</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">admin:</span></span><br><span class="line">  <span class="attr">access_log_path:</span> <span class="string">/tmp/admin_access.log</span></span><br><span class="line">  <span class="attr">address:</span></span><br><span class="line">    <span class="attr">socket_address:</span> &#123; <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>, <span class="attr">port_value:</span> <span class="number">9901</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">node:</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">arc-os</span></span><br><span class="line">  <span class="attr">cluster:</span> <span class="string">arc-os</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dynamic_resources:</span></span><br><span class="line">  <span class="attr">ads_config:</span></span><br><span class="line">    <span class="attr">api_type:</span> <span class="string">GRPC</span></span><br><span class="line">    <span class="attr">transport_api_version:</span> <span class="string">V3</span></span><br><span class="line">    <span class="attr">grpc_services:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">envoy_grpc:</span></span><br><span class="line">          <span class="attr">cluster_name:</span> <span class="string">ads_cluster</span></span><br><span class="line">  <span class="attr">cds_config:</span></span><br><span class="line">    <span class="attr">resource_api_version:</span> <span class="string">V3</span></span><br><span class="line">    <span class="attr">ads:</span> &#123; &#125;</span><br><span class="line">  <span class="attr">lds_config:</span></span><br><span class="line">    <span class="attr">resource_api_version:</span> <span class="string">V3</span></span><br><span class="line">    <span class="attr">ads:</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">static_resources:</span></span><br><span class="line">  <span class="attr">clusters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ads_cluster</span></span><br><span class="line">      <span class="attr">connect_timeout:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">STRICT_DNS</span></span><br><span class="line">      <span class="attr">lb_policy:</span> <span class="string">ROUND_ROBIN</span></span><br><span class="line">      <span class="attr">http2_protocol_options:</span> &#123; &#125;</span><br><span class="line">      <span class="attr">load_assignment:</span></span><br><span class="line">        <span class="attr">cluster_name:</span> <span class="string">ads_cluster</span></span><br><span class="line">        <span class="attr">endpoints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">lb_endpoints:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">endpoint:</span></span><br><span class="line">                  <span class="attr">address:</span></span><br><span class="line">                    <span class="attr">socket_address:</span></span><br><span class="line">                      <span class="attr">address:</span> <span class="number">172.17</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">                      <span class="attr">port_value:</span> <span class="number">9777</span></span><br></pre></td></tr></table></figure>

<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vudm95cHJveHkvZ28tY29udHJvbC1wbGFuZQ==">https://github.com/envoyproxy/go-control-plane<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vudm95cHJveHkvZ28tY29udHJvbC1wbGFuZS9ibG9iL3YwLjExLjAvaW50ZXJuYWwvZXhhbXBsZS9tYWluL21haW4uZ28=">https://github.com/envoyproxy/go-control-plane/blob/v0.11.0/internal/example/main/main.go<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>envoy</tag>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>配置 git@github.com 使用代理</title>
    <url>/2023/07/21/git-protocol-use-proxy/</url>
    <content><![CDATA[<p>修改 <code>~/.ssh/config</code> 文件，添加以下内容</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    ProxyCommand /usr/bin/nc -X connect -x 127.0.0.1:7890 %h %p</span><br></pre></td></tr></table></figure>

<p>如果出现 <code>Connection closed by UNKNOWN port 65535</code> 错误，说明当前代理服务器不支持，切换其他节点即可。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>GitKraken Crack</title>
    <url>/2019/12/12/gitkraken-crack/</url>
    <content><![CDATA[<h2 id="安装-npm-以及-asar"><a href="#安装-npm-以及-asar" class="headerlink" title="安装 npm 以及 asar"></a>安装 npm 以及 asar</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># download: https://nodejs.org/en/</span></span><br><span class="line">npm i -g asar</span><br></pre></td></tr></table></figure>

<h2 id="解压-GitKraken-的资源文件"><a href="#解压-GitKraken-的资源文件" class="headerlink" title="解压 GitKraken 的资源文件"></a>解压 GitKraken 的资源文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装目录\gitkraken\app-x.x.x\resources</span></span><br><span class="line">asar extract ./app.asar ./tmp/</span><br></pre></td></tr></table></figure>

<h2 id="修改-static-index-js-文件（注意备份）"><a href="#修改-static-index-js-文件（注意备份）" class="headerlink" title="修改 static&#x2F;index.js 文件（注意备份）"></a>修改 static&#x2F;index.js 文件（注意备份）</h2><p><strong>下面是 v6.5.1 之后的版本</strong></p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- static/index.js</span></span><br><span class="line"><span class="comment">+++ static/index.js</span></span><br><span class="line"><span class="meta">@@ -1,6 +1,27 @@</span></span><br><span class="line"> // Warning: You almost certainly do *not* want to edit this code -</span><br><span class="line"> // instead, you want to edit src/js/main.jsx instead</span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+function PatchSnapshot() &#123;</span></span><br><span class="line"><span class="addition">+  const edmLiteD = snapshotResult.customRequire(&#x27;@axosoft/edm-lite-d/src/d.js&#x27;);</span></span><br><span class="line"><span class="addition">+  snapshotResult.customRequire.cache[&#x27;@axosoft/edm-lite-d/src/d.js&#x27;] = &#123;</span></span><br><span class="line"><span class="addition">+    exports: function() &#123;</span></span><br><span class="line"><span class="addition">+      let response = JSON.parse(edmLiteD(...arguments).toString(&#x27;utf8&#x27;));</span></span><br><span class="line"><span class="addition">+      if (&#x27;licenseExpiresAt&#x27; in response || &#x27;licensedFeatures&#x27; in response) &#123;</span></span><br><span class="line"><span class="addition">+        response = &#123;</span></span><br><span class="line"><span class="addition">+          ...response,</span></span><br><span class="line"><span class="addition">+          availableTrialDays: null,</span></span><br><span class="line"><span class="addition">+          licenseExpiresAt: 8640000000000000,</span></span><br><span class="line"><span class="addition">+          licensedFeatures: [&#x27;pro&#x27;]</span></span><br><span class="line"><span class="addition">+        &#125;;</span></span><br><span class="line"><span class="addition">+      &#125;</span></span><br><span class="line"><span class="addition">+      return Buffer.from(JSON.stringify(response), &#x27;utf8&#x27;);</span></span><br><span class="line"><span class="addition">+    &#125;</span></span><br><span class="line"><span class="addition">+  &#125;;</span></span><br><span class="line"><span class="addition">+&#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> (function() &#123;</span><br><span class="line"><span class="addition">+  PatchSnapshot();</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line">   const Perf = snapshotResult.customRequire(&#x27;./src/js/utils/Performance.js&#x27;);</span><br><span class="line">   Perf.timeEnd(&#x27;loading monaco scripts&#x27;);</span><br><span class="line">   Perf.time(&#x27;index.js pre-bootstrap&#x27;);</span><br></pre></td></tr></table></figure>

<p><strong>下面是 v6.5.1 之前的版本</strong></p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- static/index.js</span></span><br><span class="line"><span class="comment">+++ static/index.js</span></span><br><span class="line"><span class="meta">@@ -1,7 +1,29 @@</span></span><br><span class="line"> // Warning: You almost certainly do *not* want to edit this code -</span><br><span class="line"> // instead, you want to edit src/js/main.jsx instead</span><br><span class="line"></span><br><span class="line"><span class="addition">+function XhrPromiseReduxProxy() &#123;</span></span><br><span class="line"><span class="addition">+  const xhrPromiseRedux = snapshotResult.customRequire(</span></span><br><span class="line"><span class="addition">+    &#x27;xhr-promise-redux/dist/index.js&#x27;</span></span><br><span class="line"><span class="addition">+  );</span></span><br><span class="line"><span class="addition">+  xhrPromiseRedux._post = xhrPromiseRedux.post;</span></span><br><span class="line"><span class="addition">+  xhrPromiseRedux.post = async (url, options) =&gt; &#123;</span></span><br><span class="line"><span class="addition">+    const res = await xhrPromiseRedux._post(url, options);</span></span><br><span class="line"><span class="addition">+    if (url.match(/https:\/\/.*api.gitkraken.com\/phone-home/)) &#123;</span></span><br><span class="line"><span class="addition">+      res.body.availableTrialDays = null;</span></span><br><span class="line"><span class="addition">+      res.body.code = 0;</span></span><br><span class="line"><span class="addition">+      res.body.features = [];</span></span><br><span class="line"><span class="addition">+      res.body.individualAccessState = null;</span></span><br><span class="line"><span class="addition">+      res.body.licenseExpiresAt = 8640000000000000;</span></span><br><span class="line"><span class="addition">+      res.body.licensedFeatures = [&#x27;pro&#x27;];</span></span><br><span class="line"><span class="addition">+      res.body.proAccessState = null;</span></span><br><span class="line"><span class="addition">+    &#125;</span></span><br><span class="line"><span class="addition">+    return res;</span></span><br><span class="line"><span class="addition">+  &#125;;</span></span><br><span class="line"><span class="addition">+&#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> (function() &#123;</span><br><span class="line"><span class="addition">+  XhrPromiseReduxProxy();</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line">   const Perf = snapshotResult.customRequire(&#x27;./src/js/utils/Performance.js&#x27;);</span><br><span class="line">   Perf.timeEnd(&#x27;loading monaco scripts&#x27;);</span><br><span class="line">   Perf.time(&#x27;index.js pre-bootstrap&#x27;);</span><br></pre></td></tr></table></figure>

<h2 id="重新打包"><a href="#重新打包" class="headerlink" title="重新打包"></a>重新打包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">asar pack ./tmp/ app.asar</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>crack</tag>
        <tag>gitkraken</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab runner 使用 dind 作为 service 时的健康检查出错</title>
    <url>/2024/02/19/gitlab-dind-as-service-hc/</url>
    <content><![CDATA[<p>解决不必要的 30s 超时等待时间</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">FROM docker:20-dind as upstream</span><br><span class="line"></span><br><span class="line">FROM scratch</span><br><span class="line"></span><br><span class="line">COPY --from=upstream / /</span><br><span class="line"></span><br><span class="line">VOLUME /var/lib/docker</span><br><span class="line"></span><br><span class="line">EXPOSE 2376</span><br><span class="line"></span><br><span class="line">ENV DOCKER_TLS_CERTDIR=/certs</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [&quot;dockerd-entrypoint.sh&quot;]</span><br><span class="line"></span><br><span class="line">CMD []</span><br></pre></td></tr></table></figure>

<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRsYWIuY29tL2dpdGxhYi1vcmcvZ2l0bGFiLXJ1bm5lci8tL2lzc3Vlcy8yOTEzMCNub3RlXzEwMjgzMzE1NjQ=">https://gitlab.com/gitlab-org/gitlab-runner/-/issues/29130#note_1028331564<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L2RvY2tlci9ibG9iLzBkMWMyMTAwZDEyZGEyZTdlNDU4Y2RmZjE4ZDc0MWY2MjVjZTI3ZDYvMjAuMTAvZGluZC9Eb2NrZXJmaWxl">https://github.com/docker-library/docker/blob/0d1c2100d12da2e7e458cdff18d741f625ce27d6/20.10/dind/Dockerfile<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>gitlab runner</tag>
      </tags>
  </entry>
  <entry>
    <title>小米笔记本 Air 安装黑苹果</title>
    <url>/2021/11/01/hack-mac-in-mi-notebook-air-gen1/</url>
    <content><![CDATA[<p><strong>该教程适用于 2016 年小米笔记本 Air 13.3，CPU 为 i5-6200U</strong></p>
<p><em>与 2021-10-31 日测试安装 MacOS Big Sur 11.6 成功</em></p>
<h2 id="制作-MacOS-镜像"><a href="#制作-MacOS-镜像" class="headerlink" title="制作 MacOS 镜像"></a>制作 MacOS 镜像</h2><p>可以参考上一篇文章下载官方的安装镜像。</p>
<p>或者使用其他人修改过的镜像，比如 <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmRhbGlhbnNreS5uZXQvbWFjT1MtQmlnU3VyLTExLjYtMjBHMTY1LVJlbGVhc2UtdmVyc2lvbi13aXRoLU9DLTAuNy4zLWFuZC1DbG92ZXItNTEzOS1hbmQtUEUtb3JpZ2luYWwtaW1hZ2UuaHRtbA==">黑果小兵 MacOS 11.6<i class="fa fa-external-link-alt"></i></span> ，然后使用 <code>etcher</code> 制作镜像。</p>
<h2 id="替换-EFI-文件"><a href="#替换-EFI-文件" class="headerlink" title="替换 EFI 文件"></a>替换 EFI 文件</h2><p>从 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dodGllaGFjay9YaWFvTWktQWlyLmdpdA==">GitHub<i class="fa fa-external-link-alt"></i></span> 上下载最新的代码，将其中的 <code>EFI</code> 文件拷贝到刚才制作完成镜像的 U 盘中，<code>覆盖</code> 其中的 <code>EFI</code> 文件夹。</p>
<h2 id="升级-BIOS-至-A06"><a href="#升级-BIOS-至-A06" class="headerlink" title="升级 BIOS 至 A06"></a>升级 BIOS 至 A06</h2><p>首先不插入 U 盘，开机按 <code>F2</code> 进入 <code>BIOS</code> 设置页面，查看当前 <code>BIOS</code> 版本，如果是 <code>A05</code> 需要将 <code>BIOS</code> 升级，如果是 <code>A06</code> 则无需升级进行下一步。</p>
<p>从 <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUtNLThxS0xEQlFTOVFwVERHZUpNNVE=">百度云<i class="fa fa-external-link-alt"></i></span> ，提取码 <code>z7ec</code> 下载 <code>VFBI0A06.zip</code> 文件拷贝至 U 盘。</p>
<p>重新启动，进入 <code>Windows PE</code> 系统，运行其中的可执行文件，电脑会自动重启并升级 <code>BIOS</code>。升级完成后重新启动 <code>F2</code> 进入 <code>BIOS</code> 设置页面查看对应版本是否是 <code>A06</code>。</p>
<h2 id="解锁-CFG-LOCK"><a href="#解锁-CFG-LOCK" class="headerlink" title="解锁 CFG LOCK"></a>解锁 CFG LOCK</h2><p>插入 U 盘，开机按 <code>F12</code>，选择 U 盘进入界面后，选择 <code>Modified GRUB Shell</code>，首先 <code>setup_var 0x84A</code> 查看当前是否开启 <code>CFG LOCK</code>，在输出中有 <code>0x01</code> 则需要输入 <code>setup_var 0x84A 0x00</code> 进行解锁。</p>
<h2 id="安装-MacOS"><a href="#安装-MacOS" class="headerlink" title="安装 MacOS"></a>安装 MacOS</h2><p>重新启动，按 <code>F12</code> 选择 <code>Install MacOS Big Sur</code> 进入。</p>
<p>首先选择 <code>磁盘工具</code> 将内置磁盘格式化为 <code>APFS</code>，然后返回开始安装，在安装过程中会自动重启几次，在开机启动项中选择对应的启动项继续，直至见到 MacOS 配置页面，完成配置后进入系统。</p>
<h2 id="拷贝-EFI-至笔记本"><a href="#拷贝-EFI-至笔记本" class="headerlink" title="拷贝 EFI 至笔记本"></a>拷贝 EFI 至笔记本</h2><p>打开终端，输入 <code>diskutil list</code> 查看磁盘列表，一般来说 <code>/dev/disk0s1</code> 都是一个名为 <code>EFI</code> 的磁盘。</p>
<p>使用 <code>sudo diskutil mount /dev/disk0s1</code> 命令挂载该磁盘。将上面拷贝至 U 盘 <code>EFI</code> 文件夹的内容同样拷贝到该磁盘。</p>
<p>退出 U 盘，重新启动，如果能正确引导进入系统则安装成功。</p>
<p>如果无法进入系统，重新插入 U 盘，重新配置引导文件。</p>
<h2 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dodGllaGFjay9YaWFvTWktQWly">https://github.com/whtiehack/XiaoMi-Air<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Nha291bGEvWGlhb01pLUFpci02MjAwVQ==">https://github.com/sakoula/XiaoMi-Air-6200U<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pvaG5ueW5jMTMvWGlhb21pLU5vdGVib29rLUFpci0xR2Vu">https://github.com/johnnync13/Xiaomi-Notebook-Air-1Gen<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmRhbGlhbnNreS5uZXQv">https://blog.daliansky.net<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>mi</tag>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>在 HTTPS 的反向代理 Nginx 后运行 HTTP Harbor</title>
    <url>/2022/05/18/harbor-behind-nginx-reverse-proxy/</url>
    <content><![CDATA[<p>以下基于 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvaGFyYm9yL2hhcmJvci9yZWxlYXNlcy90YWcvdjIuNS4w">Harbor v2.5.0<i class="fa fa-external-link-alt"></i></span>。</p>
<p>最终看起来像这样 <code>nginx (host,ssl)</code> -&gt; <code>harbor-nginx (non-ssl)</code> -&gt; <code>harbor</code>。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>首先服务上安装有 <code>nginx</code>，且配置了 <code>SSL</code>，现在可能在本机或者内网的其他机器上安装有 <code>Harbor</code>，需要反向代理到本机映射出去。</p>
<h3 id="harbor-yml"><a href="#harbor-yml" class="headerlink" title="harbor.yml"></a><code>harbor.yml</code></h3><p>首先需要注释掉 <code>https</code> 相关的配置，并添加 <code>external_url</code> 的配置项。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Configuration file of Harbor</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The IP address or hostname to access admin UI and registry service.</span></span><br><span class="line"><span class="comment"># DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.</span></span><br><span class="line"><span class="attr">hostname:</span> <span class="string">hub.example.cn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># http related config</span></span><br><span class="line"><span class="attr">http:</span></span><br><span class="line">  <span class="comment"># port for http, default is 80. If https enabled, this port will redirect to https port</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https related config</span></span><br><span class="line"><span class="comment"># https:</span></span><br><span class="line">  <span class="comment"># https port for harbor, default is 443</span></span><br><span class="line">  <span class="comment"># port: 443</span></span><br><span class="line">  <span class="comment"># The path of cert and key files for nginx</span></span><br><span class="line">  <span class="comment"># certificate: /your/certificate/path</span></span><br><span class="line">  <span class="comment"># private_key: /your/private/key/path</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # Uncomment following will enable tls communication between all harbor components</span></span><br><span class="line"><span class="comment"># internal_tls:</span></span><br><span class="line"><span class="comment">#   # set enabled to true means internal tls is enabled</span></span><br><span class="line"><span class="comment">#   enabled: true</span></span><br><span class="line"><span class="comment">#   # put your cert and key files on dir</span></span><br><span class="line"><span class="comment">#   dir: /etc/harbor/tls/internal</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment external_url if you want to enable external proxy</span></span><br><span class="line"><span class="comment"># And when it enabled the hostname will no longer used</span></span><br><span class="line"><span class="attr">external_url:</span> <span class="string">https://hub.example.cn</span></span><br></pre></td></tr></table></figure>

<h3 id="harbor-conf"><a href="#harbor-conf" class="headerlink" title="harbor.conf"></a><code>harbor.conf</code></h3><p>在 <code>nginx</code> 的 <code>vhost</code> 中新增相关配置，必须要配置 <code>X-Forwarded-Proto $scheme</code>，<code>client_max_body_size</code> 按需配置。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  hub.example.cn;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl http2;</span><br><span class="line">    <span class="attribute">server_name</span>  hub.example.cn;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span>      /usr/local/openresty/nginx/conf/ssl/hub.example.cn.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>  /usr/local/openresty/nginx/conf/ssl/hub.example.cn.key;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">500m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://10.0.4.10:5080;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-PORT <span class="variable">$remote_port</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="docker-login-出现-unauthorized-authentication-required"><a href="#docker-login-出现-unauthorized-authentication-required" class="headerlink" title="docker login 出现 unauthorized: authentication required"></a><code>docker login</code> 出现 <code>unauthorized: authentication required</code></h3><p><code>harbor</code> 内没有配置 <code>external_url</code>。</p>
<h3 id="访问-hub-example-cn-会重定向到某个端口"><a href="#访问-hub-example-cn-会重定向到某个端口" class="headerlink" title="访问 hub.example.cn 会重定向到某个端口"></a>访问 <code>hub.example.cn</code> 会重定向到某个端口</h3><p><code>harbor</code> 内需要取消 <code>https</code> 的配置。</p>
<h3 id="docker-push-出现-400-The-plain-HTTP-request-was-sent-to-HTTPS-port"><a href="#docker-push-出现-400-The-plain-HTTP-request-was-sent-to-HTTPS-port" class="headerlink" title="docker push 出现 400 The plain HTTP request was sent to HTTPS port"></a><code>docker push</code> 出现 <code>400 The plain HTTP request was sent to HTTPS port</code></h3><p>反向代理 <code>nginx</code> 中没有配置 <code>X-Forwarded-Proto $scheme</code>。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>harbor</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>安装 Docker</title>
    <url>/2020/05/09/install-docker/</url>
    <content><![CDATA[<h2 id="下载安装脚本"><a href="#下载安装脚本" class="headerlink" title="下载安装脚本"></a>下载安装脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br></pre></td></tr></table></figure>

<h2 id="设置安装版本（nightly-test-stable）"><a href="#设置安装版本（nightly-test-stable）" class="headerlink" title="设置安装版本（nightly &#x2F; test &#x2F; stable）"></a>设置安装版本（nightly &#x2F; test &#x2F; stable）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> CHANNEL=stable</span><br></pre></td></tr></table></figure>

<h2 id="设置下载镜像源"><a href="#设置下载镜像源" class="headerlink" title="设置下载镜像源"></a>设置下载镜像源</h2><p><strong>具体参考安装机器的 repo</strong></p>
<h3 id="阿里云公网"><a href="#阿里云公网" class="headerlink" title="阿里云公网"></a>阿里云公网</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> DOWNLOAD_URL=https://mirrors.aliyun.com/docker-ce</span><br></pre></td></tr></table></figure>

<h3 id="阿里云内网"><a href="#阿里云内网" class="headerlink" title="阿里云内网"></a>阿里云内网</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> DOWNLOAD_URL=http://mirrors.cloud.aliyuncs.com/docker-ce</span><br></pre></td></tr></table></figure>

<h2 id="设置-repo-文件名"><a href="#设置-repo-文件名" class="headerlink" title="设置 repo 文件名"></a>设置 repo 文件名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> REPO_FILE=docker-ce.repo</span><br></pre></td></tr></table></figure>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh get-docker.sh</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt;  /etc/docker/daemon.json</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;exec-opts&quot;: [</span></span><br><span class="line"><span class="string">        &quot;native.cgroupdriver=systemd&quot;</span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;registry-mirrors&quot;: [</span></span><br><span class="line"><span class="string">        &quot;http://f1361db2.m.daocloud.io&quot;</span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;100m&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;storage-driver&quot;: &quot;overlay2&quot;,</span></span><br><span class="line"><span class="string">    &quot;storage-opts&quot;: [</span></span><br><span class="line"><span class="string">        &quot;overlay2.override_kernel_check=true&quot;</span></span><br><span class="line"><span class="string">    ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line">systemctl start docker.service</span><br><span class="line"></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><strong>腾讯云镜像 <code>repo</code> 内地址仍是 <code>download.docker.com</code> ，所以使用该脚本没有效果，但是可以使用阿里云公网下载完成后替换镜像源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 替换为腾讯云内网</span></span><br><span class="line">sed -i <span class="string">&#x27;s|https://mirrors.aliyun.com|http://mirrors.tencentyun.com|&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>基于 Docker 安装 Gitea 和 Drone / Drone-Runner</title>
    <url>/2020/05/26/install-gitea-and-drone/</url>
    <content><![CDATA[<h2 id="安装-docker-并拉取相关镜像"><a href="#安装-docker-并拉取相关镜像" class="headerlink" title="安装 docker 并拉取相关镜像"></a>安装 docker 并拉取相关镜像</h2><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2dpdGVhL2dpdGVh">gitea&#x2F;gitea<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2Ryb25lL2Ryb25l">drone&#x2F;drone<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2Ryb25lL2Ryb25lLXJ1bm5lci1kb2NrZXI=">drone&#x2F;drone-runner-docker<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull gitea/gitea</span><br><span class="line">docker pull drone/drone</span><br><span class="line">docker pull drone/drone-runner-docker</span><br></pre></td></tr></table></figure>

<h2 id="安装-gitea"><a href="#安装-gitea" class="headerlink" title="安装 gitea"></a>安装 gitea</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name gitea \</span><br><span class="line">    --restart always \</span><br><span class="line">    -p 53022:22 \</span><br><span class="line">    -p 53080:3000 \</span><br><span class="line">    -m 400m \</span><br><span class="line">    -v /opt/docker/gitea/data:/data \</span><br><span class="line">    gitea/gitea:1.11.5</span><br></pre></td></tr></table></figure>

<p>按照步骤完成安装 <code>Gitea</code> 后，打开 <code>https://git.52xckl.cn/user/settings/applications</code> 页面。</p>
<p>应用名称：<code>drone</code>，重定向 URL：<code>https://drone.52xckl.cn/login</code> 填写完成后点击创建应用获取 <code>客户端 ID</code> 与 <code>客户端密钥</code>。</p>
<h2 id="创建-drone-与-drone-runner"><a href="#创建-drone-与-drone-runner" class="headerlink" title="创建 drone 与 drone-runner"></a>创建 drone 与 drone-runner</h2><ul>
<li><code>$&#123;CLIENT_ID&#125;</code> -&gt; <code>客户端 ID</code></li>
<li><code>$&#123;CLIENT_SECRET&#125;</code> -&gt; <code>客户端密钥</code></li>
<li><code>$&#123;RPC_SECRET&#125;</code> -&gt; <code>drone 与 drone-runner 通讯的密钥，随机生成即可</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name drone \</span><br><span class="line">    --restart always \</span><br><span class="line">    -m 200m \</span><br><span class="line">    -p 54080:80 \</span><br><span class="line">    -e DRONE_GITEA_SERVER=https://git.52xckl.cn \</span><br><span class="line">    -e DRONE_GITEA_CLIENT_ID=<span class="variable">$&#123;CLIENT_ID&#125;</span> \</span><br><span class="line">    -e DRONE_GITEA_CLIENT_SECRET=<span class="variable">$&#123;CLIENT_SECRET&#125;</span>= \</span><br><span class="line">    -e DRONE_RPC_SECRET=<span class="variable">$&#123;RPC_SECRET&#125;</span> \</span><br><span class="line">    -e DRONE_SERVER_HOST=drone.52xckl.cn \</span><br><span class="line">    -e DRONE_SERVER_PROTO=https \</span><br><span class="line">    -v /opt/docker/drone/data:/var/lib/drone \</span><br><span class="line">    drone/drone:1.7.0</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name drone-runner \</span><br><span class="line">    --<span class="built_in">link</span> drone:drone \</span><br><span class="line">    --restart always \</span><br><span class="line">    -m 200m \</span><br><span class="line">    -e DRONE_RUNNER_NAME=runner-001 \</span><br><span class="line">    -e DRONE_RPC_PROTO=http \</span><br><span class="line">    -e DRONE_RPC_HOST=drone \</span><br><span class="line">    -e DRONE_RPC_SECRET=<span class="variable">$&#123;RPC_SECRET&#125;</span> \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    drone/drone-runner-docker:1.3.0</span><br></pre></td></tr></table></figure>

<p>最后 <code>docker logs -f --tail 10 drone-runner</code> 显示 <code>successfully pinged the remote server</code> 即为成功。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>首先打开 <code>https://drone.52xckl.cn/</code> 完成 <code>OAuth2</code> 认证并激活项目。</p>
<p>在激活的项目中创建名为 <code>.drone.yml</code> 的文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">pipeline</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">docker</span></span><br><span class="line"><span class="attr">steps:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">golang:1.14-alpine</span></span><br><span class="line">    <span class="attr">commands:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CGO_ENABLED=0</span> <span class="string">GO111MODULE=on</span> <span class="string">go</span> <span class="string">test</span> <span class="string">-count=1</span> <span class="string">-cover</span> <span class="string">-v</span> <span class="string">./...</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CGO_ENABLED=0</span> <span class="string">GO111MODULE=on</span> <span class="string">go</span> <span class="string">run</span> <span class="string">.</span></span><br></pre></td></tr></table></figure>

<p>这段是 <code>Go</code> 相关项目的，如果编写该文件请查询相关官方文档。</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGVhLmlvL2VuLXVzLw==">gitea<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9yZWFkbWUuZHJvbmUuaW8v">drone<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>gitea</tag>
        <tag>drone</tag>
        <tag>drone-runner</tag>
      </tags>
  </entry>
  <entry>
    <title>基于 Docker 安装 GitLab 和 GitLab-Runner</title>
    <url>/2019/12/13/install-gitlab-and-gitlab-runner/</url>
    <content><![CDATA[<h2 id="安装-docker-并拉取相关镜像"><a href="#安装-docker-并拉取相关镜像" class="headerlink" title="安装 docker 并拉取相关镜像"></a>安装 docker 并拉取相关镜像</h2><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2dpdGxhYi9naXRsYWItY2U=">gitlab&#x2F;gitlab-ce<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2dpdGxhYi9naXRsYWItcnVubmVy">gitlab&#x2F;gitlab-runner<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull gitlab/gitlab-ce</span><br><span class="line">docker pull gitlab/gitlab-runner</span><br></pre></td></tr></table></figure>

<h2 id="运行-docker-镜像"><a href="#运行-docker-镜像" class="headerlink" title="运行 docker 镜像"></a>运行 docker 镜像</h2><ul>
<li>GitLab CE</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name gitlab \</span><br><span class="line">    --restart always \</span><br><span class="line">    -p 127.0.0.1:50080:80 \</span><br><span class="line">    -p 127.0.0.1:50022:22 \</span><br><span class="line">    -m 2048m \</span><br><span class="line">    -v /opt/docker/gitlab/config:/etc/gitlab \</span><br><span class="line">    -v /opt/docker/gitlab/logs:/var/log/gitlab \</span><br><span class="line">    -v /opt/docker/gitlab/data:/var/opt/gitlab \</span><br><span class="line">    gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name gitlab-runner \</span><br><span class="line">    --<span class="built_in">link</span> gitlab:gitlab \</span><br><span class="line">    --restart always \</span><br><span class="line">    -m 1024m \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    -v /opt/docker/gitlab-runner/config:/etc/gitlab-runner \</span><br><span class="line">    gitlab/gitlab-runner:latest</span><br></pre></td></tr></table></figure>

<ul>
<li>GitLab EE</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name gitlab \</span><br><span class="line">    --restart always \</span><br><span class="line">    -p 127.0.0.1:50080:80 \</span><br><span class="line">    -p 127.0.0.1:50022:22 \</span><br><span class="line">    -m 2048m \</span><br><span class="line">    -v /opt/docker/gitlab/config:/etc/gitlab \</span><br><span class="line">    -v /opt/docker/gitlab/logs:/var/log/gitlab \</span><br><span class="line">    -v /opt/docker/gitlab/data:/var/opt/gitlab \</span><br><span class="line">    -v /opt/docker/gitlab/.license_encryption_key.pub:/opt/gitlab/embedded/service/gitlab-rails/.license_encryption_key.pub \</span><br><span class="line">    gitlab/gitlab-ee:latest</span><br></pre></td></tr></table></figure>

<h2 id="注册-gitlab-runner"><a href="#注册-gitlab-runner" class="headerlink" title="注册 gitlab-runner"></a>注册 gitlab-runner</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it gitlab-runner gitlab-runner register</span><br><span class="line"><span class="comment"># 之后访问地址 http://code.52xckl.cn/admin/runners 配置即可</span></span><br><span class="line"><span class="comment"># 配置地址可以使用 http://gitlab 内网</span></span><br></pre></td></tr></table></figure>

<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGxhYi5jb20vb21uaWJ1cy9kb2NrZXIv">gitlab<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGxhYi5jb20vcnVubmVyL2luc3RhbGwvZG9ja2VyLmh0bWw=">gitlab-runner<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>在 k8s 上使用 istio 管控</title>
    <url>/2020/05/14/install-istio-with-k8s/</url>
    <content><![CDATA[<p>使用上一篇文章成功安装 <code>k8s</code> 和 <code>calico</code> 后，使用 <code>istio</code> 管控微服务。</p>
<h2 id="下载-istio"><a href="#下载-istio" class="headerlink" title="下载 istio"></a>下载 istio</h2><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9pc3Rpby5pby9kb2NzL3NldHVwL2dldHRpbmctc3RhcnRlZC8=">https://istio.io/docs/setup/getting-started/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>Istio 1.5.4</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://istio.io/downloadIstio | sh -</span><br><span class="line"><span class="comment"># 或者从 `https://github.com/istio/istio/releases/latest` 选择版本下载后解压 `tar zxf istio-*.tar.gz`</span></span><br><span class="line"><span class="built_in">cd</span> istio-*</span><br><span class="line"><span class="comment"># 并将目录下 bin 的路径加入环境变量 `PATH`</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PWD</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9pc3Rpby5pby9kb2NzL3NldHVwL2luc3RhbGwvaXN0aW9jdGwv">https://istio.io/docs/setup/install/istioctl/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>使用默认配置安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">istioctl manifest apply</span><br></pre></td></tr></table></figure>

<p>验证是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">istioctl manifest generate &gt; istio.yaml</span><br><span class="line">istioctl verify-install -f istio.yaml</span><br></pre></td></tr></table></figure>

<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>这里简单地引用了 <code>gitea</code> 作为部署镜像，若为微服务，修改相应路由即可。</p>
<h3 id="创建-test-namespaces"><a href="#创建-test-namespaces" class="headerlink" title="创建 test namespaces"></a>创建 <code>test</code> namespaces</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create namespace <span class="built_in">test</span></span><br></pre></td></tr></table></figure>

<h3 id="创建-configmaps"><a href="#创建-configmaps" class="headerlink" title="创建 configmaps"></a>创建 configmaps</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">DB_TYPE:</span> <span class="string">sqlite3</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f config.yaml</span><br></pre></td></tr></table></figure>

<h3 id="部署-1"><a href="#部署-1" class="headerlink" title="部署"></a>部署</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitea.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http-web</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">3000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">gitea/gitea:latest</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">port</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">3000</span></span><br><span class="line">          <span class="attr">envFrom:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">  <span class="attr">gateways:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">istio-system/istio-ingressgateway</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">uri:</span></span><br><span class="line">            <span class="attr">prefix:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">      <span class="attr">route:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">            <span class="attr">host:</span> <span class="string">web</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f gitea.yaml</span><br></pre></td></tr></table></figure>

<h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><p>修改 <code>istio-ingressgateway</code> 的 <code>LoadBalancer</code> 为 <code>NodePort</code> 将端口暴露出去。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl edit service istio-ingressgateway -n istio-system</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get service -n istio-system</span><br></pre></td></tr></table></figure>

<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">istio</span>-ingressgateway   NodePort    <span class="number">10.96.203.60</span>    &lt;none&gt;        <span class="number">80</span>:<span class="number">31893</span>/TCP   <span class="number">25</span>m</span><br></pre></td></tr></table></figure>

<p>最后访问 <code>http://$&#123;ip&#125;:31893/</code> 就可以看到 <code>Gitea</code> 的页面了。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>istio</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 安装 Kubernetes</title>
    <url>/2020/05/09/install-kubernetes/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h3><p>上一篇文章 <a href="https://blog.starudream.cn/2020/05/09/12-install-docker/">安装 docker</a></p>
<h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname k8s-master</span><br></pre></td></tr></table></figure>

<h3 id="修改-etc-hosts"><a href="#修改-etc-hosts" class="headerlink" title="修改 &#x2F;etc&#x2F;hosts"></a>修改 &#x2F;etc&#x2F;hosts</h3><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">192.168.140.28</span> api.k8s.local k8s-master</span><br></pre></td></tr></table></figure>

<h3 id="关闭-swap"><a href="#关闭-swap" class="headerlink" title="关闭 swap"></a>关闭 swap</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br></pre></td></tr></table></figure>

<p>注释 <code>/etc/fstab</code> 文件中 <code>swap</code> 分区。</p>
<h3 id="添加内核参数"><a href="#添加内核参数" class="headerlink" title="添加内核参数"></a>添加内核参数</h3><p>修改 <code>/etc/sysctl.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fs.file-max = 1000000</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br></pre></td></tr></table></figure>

<h2 id="添加-repo-源"><a href="#添加-repo-源" class="headerlink" title="添加 repo 源"></a>添加 repo 源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg</span></span><br><span class="line"><span class="string">       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h3 id="阿里云公网"><a href="#阿里云公网" class="headerlink" title="阿里云公网"></a>阿里云公网</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s|packages.cloud.google.com|mirrors.aliyun.com/kubernetes|&#x27;</span> /etc/yum.repos.d/kubernetes.repo</span><br></pre></td></tr></table></figure>

<h3 id="阿里云内网"><a href="#阿里云内网" class="headerlink" title="阿里云内网"></a>阿里云内网</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s|https://packages.cloud.google.com|http://mirrors.cloud.aliyuncs.com/kubernetes|&#x27;</span> /etc/yum.repos.d/kubernetes.repo</span><br></pre></td></tr></table></figure>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y kubeadm kubelet kubectl</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure>

<h2 id="初始化-master-节点"><a href="#初始化-master-节点" class="headerlink" title="初始化 master 节点"></a>初始化 master 节点</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">    --kubernetes-version=1.18.2 \</span><br><span class="line">    --apiserver-advertise-address=192.168.140.28 \</span><br><span class="line">    --apiserver-bind-port 6443 \</span><br><span class="line">    --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">    --image-repository registry.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure>

<p>当出现 <code>Your Kubernetes control-plane has initialized successfully!</code> 即安装成功，并且在下面有相关配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>

<p>还有最后一条命令在添加 k8s node 节点时使用到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.140.28:6443 --token xxx --discovery-token-ca-cert-hash sha256:xxx</span><br></pre></td></tr></table></figure>

<p>如果忘了保存，可以使用以下命令重新获取到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure>

<p>这时可以使用以下命令查看节点</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get node</span><br><span class="line"></span><br><span class="line">kubectl get pod -A</span><br></pre></td></tr></table></figure>

<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">NAME         STATUS     ROLES    AGE     <span class="keyword">VERSION</span></span><br><span class="line">k8s-<span class="keyword">master</span>   <span class="title">NotReady</span>   <span class="keyword">master</span>   <span class="title">8m56s</span>   v1.<span class="number">18.2</span></span><br></pre></td></tr></table></figure>

<p>这边看到状态为 <code>NotReady</code> 是因为未安装网络组件。</p>
<h2 id="添加-node-节点"><a href="#添加-node-节点" class="headerlink" title="添加 node 节点"></a>添加 node 节点</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.140.28:6443 --token xxx --discovery-token-ca-cert-hash sha256:xxx</span><br></pre></td></tr></table></figure>

<h2 id="安装-Calico-网络"><a href="#安装-Calico-网络" class="headerlink" title="安装 Calico 网络"></a>安装 Calico 网络</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --<span class="built_in">unlink</span> -qO calico.yaml https://docs.projectcalico.org/v3.14/manifests/calico.yaml</span><br><span class="line"><span class="comment"># 10.244.0.0/16 这个地址需要与上面的 kubeadm init --pod-network-cidr 参数值一致</span></span><br><span class="line">sed -i -e <span class="string">&quot;s|192.168.0.0/16|10.244.0.0/16|g&quot;</span> calico.yaml</span><br><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></table></figure>

<p>完成这步之后会看到节点的状态变为 <code>Ready</code>。</p>
<h2 id="安装-Dashboard"><a href="#安装-Dashboard" class="headerlink" title="安装 Dashboard"></a>安装 Dashboard</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --<span class="built_in">unlink</span> -qO dashboard.yaml https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml</span><br><span class="line">kubectl apply -f dashboard.yaml</span><br></pre></td></tr></table></figure>

<p>一般这样是无法通过外网访问，建议在测试环境下修改 <code>kubernetes-dashboard</code> 的 <code>ClusterIP</code> 为 <code>NodePort</code> 将端口暴露出去。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl edit service kubernetes-dashboard -n kubernetes-dashboard</span><br></pre></td></tr></table></figure>

<p>修改之后，查看 <code>services</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubernetes-dashboard   kubernetes-dashboard        NodePort    10.106.39.19    &lt;none&gt;        443:31570/TCP            36m</span><br></pre></td></tr></table></figure>

<p>之后访问 <code>https://$&#123;ip&#125;:31570</code> 发现需要 <code>token</code>，下面创建一个管理员用户。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># admin-user.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f admin-user.yaml</span><br></pre></td></tr></table></figure>

<p>最后查看 <code>token</code>，找到 <code>admin-user</code> 复制 <code>token</code> 即可以管理员身份访问。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">k describe secrets -n kubernetes-dashboard</span><br></pre></td></tr></table></figure>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="master-参与工作（单机部署）"><a href="#master-参与工作（单机部署）" class="headerlink" title="master 参与工作（单机部署）"></a>master 参与工作（单机部署）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br></pre></td></tr></table></figure>

<h3 id="命令补全"><a href="#命令补全" class="headerlink" title="命令补全"></a>命令补全</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl completion bash &gt; /root/.kube/completion.bash.inc</span><br></pre></td></tr></table></figure>

<p>如果使用 <code>k</code> 作为 <code>kubectl</code> 的别名，需要修改上面生成的文件，在文件末尾修改为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [[ $(<span class="built_in">type</span> -t compopt) = <span class="string">&quot;builtin&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    complete -o default -F __start_kubectl kubectl</span><br><span class="line">    complete -o default -F __start_kubectl k</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    complete -o default -o nospace -F __start_kubectl kubectl</span><br><span class="line">    complete -o default -o nospace -F __start_kubectl k</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>最后将下面这段加入 <code>.bash_profile</code> 中，以使用自动补全功能。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># complete</span></span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"><span class="built_in">source</span> /root/.kube/completion.bash.inc</span><br><span class="line"></span><br><span class="line"><span class="comment"># alias</span></span><br><span class="line"><span class="built_in">alias</span> k=<span class="string">&#x27;kubectl&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 创建虚拟网卡</title>
    <url>/2020/05/18/install-virtual-network/</url>
    <content><![CDATA[<h2 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install -y uml-utilities bridge-utils</span><br></pre></td></tr></table></figure>

<h2 id="添加网桥"><a href="#添加网桥" class="headerlink" title="添加网桥"></a>添加网桥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brctl addbr br0</span><br></pre></td></tr></table></figure>

<h2 id="激活网桥"><a href="#激活网桥" class="headerlink" title="激活网桥"></a>激活网桥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> br0 up</span><br></pre></td></tr></table></figure>

<h2 id="添加虚拟网卡"><a href="#添加虚拟网卡" class="headerlink" title="添加虚拟网卡"></a>添加虚拟网卡</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> tap0 up</span><br></pre></td></tr></table></figure>

<h2 id="将虚拟网卡添加到指定网桥上"><a href="#将虚拟网卡添加到指定网桥上" class="headerlink" title="将虚拟网卡添加到指定网桥上"></a>将虚拟网卡添加到指定网桥上</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brctl addif br0 tap0</span><br></pre></td></tr></table></figure>

<h2 id="给网桥配制ip地址"><a href="#给网桥配制ip地址" class="headerlink" title="给网桥配制ip地址"></a>给网桥配制ip地址</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig br0 172.24.16.10 up</span><br></pre></td></tr></table></figure>

<h2 id="移除"><a href="#移除" class="headerlink" title="移除"></a>移除</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brctl delif br0 tap0</span><br><span class="line"></span><br><span class="line">tunctl -d tap0</span><br><span class="line"></span><br><span class="line">brctl delbr br0</span><br></pre></td></tr></table></figure>

<h2 id="brctl"><a href="#brctl" class="headerlink" title="brctl"></a>brctl</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Usage: brctl [commands]</span><br><span class="line">commands:</span><br><span class="line">  addbr          <span class="symbol">&lt;bridge&gt;</span>                  <span class="built_in">add</span> bridge</span><br><span class="line">  delbr          <span class="symbol">&lt;bridge&gt;</span>                  <span class="keyword">delete</span> bridge</span><br><span class="line">  addif          <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;device&gt;</span>         <span class="built_in">add</span> interface <span class="keyword">to</span> bridge</span><br><span class="line">  delif          <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;device&gt;</span>         <span class="keyword">delete</span> interface from bridge</span><br><span class="line">  hairpin        <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;port&gt;</span> &#123;<span class="keyword">on</span>|off&#125;  turn hairpin <span class="keyword">on</span>/off</span><br><span class="line">  setageing      <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;time&gt;</span>           <span class="keyword">set</span> ageing time</span><br><span class="line">  setbridgeprio  <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;prio&gt;</span>           <span class="keyword">set</span> bridge priority</span><br><span class="line">  setfd          <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;time&gt;</span>           <span class="keyword">set</span> bridge forward delay</span><br><span class="line">  sethello       <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;time&gt;</span>           <span class="keyword">set</span> hello time</span><br><span class="line">  setmaxage      <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;time&gt;</span>           <span class="keyword">set</span> <span class="built_in">max</span> message age</span><br><span class="line">  setpathcost    <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;port&gt;</span> <span class="symbol">&lt;cost&gt;</span>    <span class="keyword">set</span> path cost</span><br><span class="line">  setportprio    <span class="symbol">&lt;bridge&gt;</span> <span class="symbol">&lt;port&gt;</span> <span class="symbol">&lt;prio&gt;</span>    <span class="keyword">set</span> port priority</span><br><span class="line">  show           [ <span class="symbol">&lt;bridge&gt;</span> ]              show <span class="keyword">a</span> <span class="keyword">list</span> of bridges</span><br><span class="line">  showmacs       <span class="symbol">&lt;bridge&gt;</span>                  show <span class="keyword">a</span> <span class="keyword">list</span> of mac addrs</span><br><span class="line">  showstp        <span class="symbol">&lt;bridge&gt;</span>                  show bridge stp info</span><br><span class="line">  stp            <span class="symbol">&lt;bridge&gt;</span> &#123;<span class="keyword">on</span>|off&#125;         turn stp <span class="keyword">on</span>/off</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>简单介绍</title>
    <url>/2019/11/19/introduction/</url>
    <content><![CDATA[<p>博客使用 <code>Hexo</code>，搭建在 <code>Github Pages</code>，源代码部署在 <code>GitLab</code> 上，使用相关 <code>CI</code> 自动化部署。</p>
<h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a><code>_config.yml</code></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://$&#123;username&#125;:$&#123;token|password&#125;@github.com/starudream/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">update</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">$&#123;name&#125;</span></span><br><span class="line">  <span class="attr">email:</span> <span class="string">$&#123;email&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="gitlab-ci-yml"><a href="#gitlab-ci-yml" class="headerlink" title=".gitlab-ci.yml"></a><code>.gitlab-ci.yml</code></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">node:lts-alpine</span></span><br><span class="line"></span><br><span class="line"><span class="attr">github:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">publish</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">apk</span> <span class="string">add</span> <span class="string">--no-cache</span> <span class="string">git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">$&#123;name&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">$&#123;email&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">https://$&#123;name&#125;:$&#123;token|password&#125;@github.com/starudream/blog.git</span> <span class="string">.deploy_git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">&amp;&amp;</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">publish</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">node_modules</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Istio 保留 x-request-id</title>
    <url>/2023/03/22/istio-preserve-external-request-id/</url>
    <content><![CDATA[<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">EnvoyFilter</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">api-envoy-filter</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">istio-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">configPatches:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">applyTo:</span> <span class="string">NETWORK_FILTER</span></span><br><span class="line">      <span class="attr">match:</span></span><br><span class="line">        <span class="attr">context:</span> <span class="string">GATEWAY</span></span><br><span class="line">        <span class="attr">listener:</span></span><br><span class="line">          <span class="attr">filterChain:</span></span><br><span class="line">            <span class="attr">filter:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">envoy.filters.network.http_connection_manager</span></span><br><span class="line">      <span class="attr">patch:</span></span><br><span class="line">        <span class="attr">operation:</span> <span class="string">MERGE</span></span><br><span class="line">        <span class="attr">value:</span></span><br><span class="line">          <span class="attr">typed_config:</span></span><br><span class="line">            <span class="string">&quot;@type&quot;</span><span class="string">:</span> <span class="string">&quot;type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager&quot;</span></span><br><span class="line">            <span class="attr">preserve_external_request_id:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>envoy</tag>
        <tag>istio</tag>
      </tags>
  </entry>
  <entry>
    <title>K3S 客户端证书时间延长</title>
    <url>/2023/07/21/k3s-client-cert-extend/</url>
    <content><![CDATA[<p><code>k3s</code> 默认的根证书签发 十年，客户端证书签发 一年。</p>
<p>经常需要重新签发客户端证书，可以通过修改 <code>k3s</code> 的环境变量来延长客户端证书的有效期。</p>
<p>新增 <code>/etc/default/k3s</code> 文件，并添加以下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">CATTLE_NEW_SIGNED_CERT_EXPIRATION_DAYS=&quot;3650&quot;</span><br></pre></td></tr></table></figure>

<p>该变量在 <code>k3s server</code> 重新签发证书时有效，或者在安装之前设置。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>k3s</tag>
      </tags>
  </entry>
  <entry>
    <title>K3S 服务器设置镜像仓库</title>
    <url>/2023/07/21/k3s-server-set-registry/</url>
    <content><![CDATA[<p>新增 <code>/etc/rancher/k3s/registries.yaml</code> 文件，并添加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;hub.docker.local:5000&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://hub.docker.local:5000&quot;</span></span><br><span class="line">  <span class="attr">&quot;docker.io&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://hub.docker.local:5000&quot;</span></span><br><span class="line">  <span class="attr">&quot;k8s.gcr.io&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://hub.docker.local:5000&quot;</span></span><br><span class="line">  <span class="attr">&quot;quay.io&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://hub.docker.local:5000&quot;</span></span><br></pre></td></tr></table></figure>

<p>k3s 的配置支持镜像地址重写，如果拉去镜像 <code>quay.io/prometheus/prometheus:v2.27.1</code> 可以重写到 <code>hub.docker.local:5000/prometheus/prometheus:v2.27.1</code></p>
<p>而本地只需要拉去相关镜像然后 <code>docker tag xxx hub.docker.local:5000/xxx</code> 即可。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>k3s</tag>
        <tag>mirror</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes LimitRange 解释</title>
    <url>/2024/02/19/k8s-limit-range-explain/</url>
    <content><![CDATA[<ul>
<li><code>min</code>: 最小值</li>
<li><code>max</code>: 最大值</li>
<li><code>default</code> 默认 <code>limit</code> 值</li>
<li><code>defaultRequest</code> 默认 <code>request</code> 值</li>
</ul>
<p>如果 <code>deployment</code> 没有 <code>resources</code> <code>requests</code> 和 <code>limits</code>，那么会使用 <code>defaultRequest</code> 和 <code>default</code> 值，否则使用自定义的值，但是 <code>limits</code> 不能超过 <code>max</code>，<code>requests</code> 不能小于 <code>min</code>。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>免登录只读访问 kubernetes dashboard</title>
    <url>/2023/03/22/kubernetes-dashboard-readonly-without-login/</url>
    <content><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>基于 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvZGFzaGJvYXJkL2Jsb2IvdjIuNy4wL2Fpby9kZXBsb3kvcmVjb21tZW5kZWQueWFtbA==">v2.7.0<i class="fa fa-external-link-alt"></i></span> 的配置文件，修改了 <code>ClusterRole</code> 和 <code>ClusterRoleBinding</code>，使得 <code>dashboard</code> 只能以只读的方式访问 <code>kubernetes</code> 集群。</p>
<p>首先需要修改 <code>dashboard</code> 启动 <code>args</code>，移除 <code>--auto-generate-certificates</code>，添加 <code>--enable-insecure-login</code> 和 <code>--enable-skip-login</code>。</p>
<p>然后修改 Service 端口为 <code>9090</code>，并修改 <code>Deployment</code> 健康检查，根据权限修改 <code>ClusterRole</code>。</p>
<p>最后通过访问 <code>kubernetes-dashboard.kubernetes-dashboard.svc.cluster.local:9090</code> 即可。</p>
<h2 id="完整配置"><a href="#完整配置" class="headerlink" title="完整配置"></a>完整配置</h2><p><strong>注意：以下配置中禁用了对 <code>secret</code> 的访问权限</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9090</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-csrf</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">csrf:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-key-holder</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-settings</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;secrets&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">&quot;kubernetes-dashboard-key-holder&quot;</span>, <span class="string">&quot;kubernetes-dashboard-certs&quot;</span>, <span class="string">&quot;kubernetes-dashboard-csrf&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;configmaps&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">&quot;kubernetes-dashboard-settings&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;services&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">&quot;heapster&quot;</span>, <span class="string">&quot;dashboard-metrics-scraper&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;proxy&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;services/proxy&quot;</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">&quot;heapster&quot;</span>, <span class="string">&quot;http:heapster:&quot;</span>, <span class="string">&quot;https:heapster:&quot;</span>, <span class="string">&quot;dashboard-metrics-scraper&quot;</span>, <span class="string">&quot;http:dashboard-metrics-scraper&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;configmaps&quot;</span>, <span class="string">&quot;endpoints&quot;</span>, <span class="string">&quot;persistentvolumes&quot;</span>, <span class="string">&quot;persistentvolumeclaims&quot;</span>, <span class="string">&quot;persistentvolumeclaims/status&quot;</span>, <span class="string">&quot;pods&quot;</span>, <span class="string">&quot;replicationcontrollers&quot;</span>, <span class="string">&quot;replicationcontrollers/scale&quot;</span>, <span class="string">&quot;serviceaccounts&quot;</span>, <span class="string">&quot;services&quot;</span>, <span class="string">&quot;services/status&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;bindings&quot;</span>, <span class="string">&quot;events&quot;</span>, <span class="string">&quot;limitranges&quot;</span>, <span class="string">&quot;namespaces/status&quot;</span>, <span class="string">&quot;pods/log&quot;</span>, <span class="string">&quot;pods/status&quot;</span>, <span class="string">&quot;replicationcontrollers/status&quot;</span>, <span class="string">&quot;resourcequotas&quot;</span>, <span class="string">&quot;resourcequotas/status&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;namespaces&quot;</span>, <span class="string">&quot;nodes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;apps&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;daemonsets&quot;</span>, <span class="string">&quot;daemonsets/status&quot;</span>, <span class="string">&quot;deployments&quot;</span>, <span class="string">&quot;deployments/scale&quot;</span>, <span class="string">&quot;deployments/status&quot;</span>, <span class="string">&quot;replicasets&quot;</span>, <span class="string">&quot;replicasets/scale&quot;</span>, <span class="string">&quot;replicasets/status&quot;</span>, <span class="string">&quot;statefulsets&quot;</span>, <span class="string">&quot;statefulsets/scale&quot;</span>, <span class="string">&quot;statefulsets/status&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;autoscaling&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;horizontalpodautoscalers&quot;</span>, <span class="string">&quot;horizontalpodautoscalers/status&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;batch&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;cronjobs&quot;</span>, <span class="string">&quot;cronjobs/status&quot;</span>, <span class="string">&quot;jobs&quot;</span>, <span class="string">&quot;jobs/status&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;extensions&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;daemonsets&quot;</span>, <span class="string">&quot;daemonsets/status&quot;</span>, <span class="string">&quot;deployments&quot;</span>, <span class="string">&quot;deployments/scale&quot;</span>, <span class="string">&quot;deployments/status&quot;</span>, <span class="string">&quot;ingresses&quot;</span>, <span class="string">&quot;ingresses/status&quot;</span>, <span class="string">&quot;networkpolicies&quot;</span>, <span class="string">&quot;replicasets&quot;</span>, <span class="string">&quot;replicasets/scale&quot;</span>, <span class="string">&quot;replicasets/status&quot;</span>, <span class="string">&quot;replicationcontrollers/scale&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;policy&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;poddisruptionbudgets&quot;</span>, <span class="string">&quot;poddisruptionbudgets/status&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;networking.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;networkpolicies&quot;</span>, <span class="string">&quot;ingresses&quot;</span>, <span class="string">&quot;ingresses/status&quot;</span>, <span class="string">&quot;ingressclasses&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;storage.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;storageclasses&quot;</span>, <span class="string">&quot;volumeattachments&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;metrics.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>, <span class="string">&quot;nodes&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;rbac.authorization.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;clusterrolebindings&quot;</span>, <span class="string">&quot;clusterroles&quot;</span>, <span class="string">&quot;roles&quot;</span>, <span class="string">&quot;rolebindings&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;apiextensions.k8s.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;customresourcedefinitions&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;networking.istio.io&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;gateways&quot;</span>, <span class="string">&quot;envoyfilters&quot;</span>, <span class="string">&quot;virtualservices&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">seccompProfile:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">RuntimeDefault</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">kubernetesui/dashboard:v2.7.0</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9090</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--namespace=kubernetes-dashboard</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--enable-insecure-login</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--enable-skip-login</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/certs</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">            <span class="attr">secretName:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">&quot;kubernetes.io/os&quot;:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">seccompProfile:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">RuntimeDefault</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">kubernetesui/metrics-scraper:v1.0.8</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8000</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">&quot;kubernetes.io/os&quot;:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvZGFzaGJvYXJkL3RyZWUvdjIuNy4w">https://github.com/kubernetes/dashboard/tree/v2.7.0<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvZGFzaGJvYXJkL2Jsb2IvdjIuNy4wL2RvY3MvY29tbW9uL2Rhc2hib2FyZC1hcmd1bWVudHMubWQ=">https://github.com/kubernetes/dashboard/blob/v2.7.0/docs/common/dashboard-arguments.md<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20va2FydGhpazEwMS8yMDEzNzRhZWUyZWJlYTI1ZGRmNmM3MjM4NTg1NjhiZQ==">https://gist.github.com/karthik101/201374aee2ebea25ddf6c723858568be<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 glibMacOS 制作 MacOS 安装镜像</title>
    <url>/2021/11/01/mac-install-image-with-glibmacos/</url>
    <content><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ol>
<li><p>首先从 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvcnBuZXd0L2dpYk1hY09T">GitHub<i class="fa fa-external-link-alt"></i></span> 上下载最新的代码。</p>
</li>
<li><p>解压后，运行 <code>gibMacOS.bat</code>。</p>
</li>
<li><p>选择 <code>MacOS</code> 版本，输入序号并按回车。</p>
</li>
<li><p>等待下载完成。</p>
</li>
</ol>
<h2 id="刻录"><a href="#刻录" class="headerlink" title="刻录"></a>刻录</h2><ol>
<li><p>插入 U 盘。</p>
</li>
<li><p>运行 <code>MakeInstall.bat</code>。</p>
</li>
<li><p>选择正确的磁盘，并输入前面的序号，按下回车，再输入 <code>Y</code> 按下回车（U 盘内所有数据将会被清除）。</p>
</li>
<li><p>进入 <code>gibMacOS\macOS Downloads\publicrelease</code> 目录，按着 <code>shift</code> 并右击相应版本的文件夹，选择 <code>复制文件地址</code>。</p>
</li>
<li><p>回到 <code>MakeInstall.bat</code> 窗口，右击粘贴刚才复制的路径并按回车。</p>
</li>
<li><p>等待直到制作完成。</p>
</li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>该工具下载可能较慢，建议在初始化的冒出的 <code>xml</code> 连接中直接找对应的文件。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 源码安装 node 时 `No Xcode or CLT version detected!` 错误</title>
    <url>/2021/06/18/mac-node-no-xcode-detected/</url>
    <content><![CDATA[<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>重新安装 <code>Xcode Tools</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -rf $(xcode-select -p)</span><br><span class="line">sudo xcode-select --install</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>node</tag>
        <tag>xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>米游社 2.62.2 版本 salt 获取</title>
    <url>/2023/11/09/miyoushe-salt-2.62.2/</url>
    <content><![CDATA[<p>首先从 <span class="exturl" data-url="aHR0cHM6Ly93d3cubWl5b3VzaGUuY29tLw==">miyoushe<i class="fa fa-external-link-alt"></i></span> 官网下载 apk，然后使用 jadx 反编译 apk。</p>
<p>从 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1VJR0Ytb3JnL21paG95by1hcGktY29sbGVjdC9pc3N1ZXMvMQ==">文章<i class="fa fa-external-link-alt"></i></span> 中可知生成 <code>DS</code> 算法的位置位于 <code>com.mihoyo.hyperion.net</code> 包内，</p>
<p>使用 <code>jadx</code> 打开到对应目录，可以找到 <code>bbbbb.a2222</code>、 <code>aaaaa.a2222</code>、 <code>aaaaa.b5555</code>，分别为 <code>DS1</code> <code>DS2</code> 的算法实现。</p>
<img data-src="/images/44-1.png" alt="预览" style="max-height:600px;"/>

<p>右键方法名，选择 <code>Find Usage</code>，可以看到对应的实现。</p>
<img data-src="/images/44-2.png" alt="预览" style="max-height:600px;"/>
<img data-src="/images/44-3.png" alt="预览" style="max-height:600px;"/>
<img data-src="/images/44-4.png" alt="预览" style="max-height:600px;"/>

<p>可以看到 <code>DS</code> <code>LK2</code> <code>K2</code> 相关的加密算法，通过相关函数输入到 <code>bbbbb.a2222</code> 方法中，找到函数的参数，即为 <code>salt</code>。</p>
<img data-src="/images/44-5.png" alt="预览" style="max-height:600px;"/>

<p>下面以 <code>DS</code> 为例，把传入 <code>bbbbb.a2222</code> 方法的方法与参数拷贝出来，稍加修改，得到下面的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(f1(f276382k));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[] f276382k = &#123;<span class="number">192</span>, -<span class="number">74</span>, <span class="number">180</span>, <span class="number">222</span>, <span class="number">90</span>, <span class="number">198</span>, -<span class="number">177147</span>, -<span class="number">84</span>, -<span class="number">66</span>, <span class="number">126</span>, <span class="number">168</span>, <span class="number">156</span>, <span class="number">186</span>, <span class="number">66</span>, -<span class="number">88</span>, -<span class="number">4782969</span>, <span class="number">126</span>, <span class="number">216</span>, -<span class="number">98</span>, -<span class="number">118</span>, -<span class="number">88</span>, -<span class="number">4782969</span>, -<span class="number">86</span>, <span class="number">180</span>, <span class="number">216</span>, <span class="number">102</span>, <span class="number">156</span>, <span class="number">126</span>, -<span class="number">100</span>, -<span class="number">59049</span>, -<span class="number">177147</span>, <span class="number">198</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">f1</span><span class="params">(<span class="type">int</span>[] iArr)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i11;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        ArrayList&lt;Number&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>(iArr.length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i12 : iArr) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i12 &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                i11 = ((<span class="type">double</span>) (-i12)) &gt;= Math.pow(<span class="number">3.0d</span>, <span class="number">6.0d</span>) ? (<span class="type">int</span>) (((Math.log(-i12) / Math.log(<span class="number">3.0d</span>)) - <span class="number">6</span>) + <span class="number">48</span>) : ~i12;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                i11 = (i12 / <span class="number">3</span>) + <span class="number">48</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            arrayList.add(Integer.valueOf(i11));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ArrayList</span> <span class="variable">arrayList2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>(Z(arrayList, <span class="number">10</span>));</span><br><span class="line">        <span class="keyword">for</span> (Number number : arrayList) &#123;</span><br><span class="line">            sb2.append((<span class="type">char</span>) number.intValue());</span><br><span class="line">            arrayList2.add(sb2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sb3</span> <span class="operator">=</span> sb2.toString();</span><br><span class="line">        <span class="keyword">return</span> sb3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> &lt;T&gt; <span class="type">int</span> <span class="title function_">Z</span><span class="params">(Iterable&lt;? extends T&gt; iterable, <span class="type">int</span> i11)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> iterable <span class="keyword">instanceof</span> Collection ? ((Collection) iterable).size() : i11;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行后得到 <code>pIlzNr5SAZhdnFW8ZxauW8UlxRdZc45r</code> 即为 <code>salt</code>，带入到相关 <code>api</code> 验证一下，成功。</p>
<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NreWxvdC9qYWR4">https://github.com/skylot/jadx<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1VJR0Ytb3JnL21paG95by1hcGktY29sbGVjdC9pc3N1ZXMvMQ==">https://github.com/UIGF-org/mihoyo-api-collect/issues/1<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0F6dXJlOTkvR2Vuc2hpblBsYXllclF1ZXJ5L2lzc3Vlcy8yMA==">https://github.com/Azure99/GenshinPlayerQuery/issues/20<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>android</tag>
        <tag>game</tag>
        <tag>mihoyo</tag>
      </tags>
  </entry>
  <entry>
    <title>修改主题 Pisces</title>
    <url>/2019/12/19/motify-theme-pisces/</url>
    <content><![CDATA[<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- a/themes/next/layout/_scripts/pjax.swig</span></span><br><span class="line"><span class="comment">+++ b/themes/next/layout/_scripts/pjax.swig</span></span><br><span class="line"><span class="meta">@@ -15,8 +15,8 @@</span> var pjax = new Pjax(&#123;</span><br><span class="line">   scrollTo : !CONFIG.bookmark.enable</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="deletion">-window.addEventListener(&#x27;pjax:success&#x27;, () =&gt; &#123;</span></span><br><span class="line"><span class="deletion">-  document.querySelectorAll(&#x27;script[pjax], script#page-configurations, #pjax script&#x27;).forEach(element =&gt; &#123;</span></span><br><span class="line"><span class="addition">+window.addEventListener(&#x27;pjax:success&#x27;, function() &#123;</span></span><br><span class="line"><span class="addition">+  document.querySelectorAll(&#x27;script[pjax], script#page-configurations, #pjax script&#x27;).forEach(function(element) &#123;</span></span><br><span class="line">     var code = element.text || element.textContent || element.innerHTML || &#x27;&#x27;;</span><br><span class="line">     var parent = element.parentNode;</span><br><span class="line">     parent.removeChild(element);</span><br><span class="line"></span><br><span class="line"><span class="comment">--- a/themes/next/layout/_third-party/comments/disqus.swig</span></span><br><span class="line"><span class="comment">+++ b/themes/next/layout/_third-party/comments/disqus.swig</span></span><br><span class="line"><span class="meta">@@ -41,7 +41,7 @@</span></span><br><span class="line">         // load directly when there&#x27;s no a scrollbar</span><br><span class="line">         window.addEventListener(&#x27;load&#x27;, loadComments, false);</span><br><span class="line">       &#125; else &#123;</span><br><span class="line"><span class="deletion">-        var disqus_scroll = () =&gt; &#123;</span></span><br><span class="line"><span class="addition">+        var disqus_scroll = function() &#123;</span></span><br><span class="line">           // offsetTop may changes because of manually resizing browser window or lazy loading images.</span><br><span class="line">           var offsetTop = document.getElementById(&#x27;comments&#x27;).offsetTop - window.innerHeight;</span><br><span class="line">           var scrollTop = window.scrollY;</span><br><span class="line"></span><br><span class="line"><span class="comment">--- a/themes/next/layout/_third-party/quicklink.swig</span></span><br><span class="line"><span class="comment">+++ b/themes/next/layout/_third-party/quicklink.swig</span></span><br><span class="line"><span class="meta">@@ -3,12 +3,12 @@</span></span><br><span class="line">   &lt;script src=&quot;&#123;&#123; quicklink_uri &#125;&#125;&quot;&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">     &#123;%- if page.quicklink.delay %&#125;</span><br><span class="line"><span class="deletion">-      window.addEventListener(&#x27;load&#x27;, () =&gt; &#123;</span></span><br><span class="line"><span class="addition">+      window.addEventListener(&#x27;load&#x27;, function() &#123;</span></span><br><span class="line">     &#123;%- endif %&#125;</span><br><span class="line">       quicklink(&#123;</span><br><span class="line">         timeout: &#123;&#123; page.quicklink.timeout &#125;&#125;,</span><br><span class="line">         priority: &#123;&#123; page.quicklink.priority &#125;&#125;,</span><br><span class="line"><span class="deletion">-        ignores: [uri =&gt; uri.includes(&#x27;#&#x27;),uri =&gt; uri == &#x27;&#123;&#123; url | replace(&#x27;index.html&#x27;, &#x27;&#x27;) &#125;&#125;&#x27;,&#123;&#123; page.quicklink.ignores &#125;&#125;]</span></span><br><span class="line"><span class="addition">+        ignores: [function(uri) &#123; return uri.includes(&#x27;#&#x27;) &#125;, function(uri) &#123; return uri === &#x27;&#123;&#123; url | replace(&#x27;index.html&#x27;, &#x27;&#x27;) &#125;&#125;&#x27; &#125;, &#123;&#123; page.quicklink.ignores &#125;&#125;]</span></span><br><span class="line">       &#125;);</span><br><span class="line">     &#123;%- if page.quicklink.delay %&#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>主题</category>
      </categories>
      <tags>
        <tag>theme</tag>
        <tag>pisces</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx location 的一些例子</title>
    <url>/2022/08/04/nginx-location-proxy-example/</url>
    <content><![CDATA[<h2 id="proxy-pass"><a href="#proxy-pass" class="headerlink" title="proxy_pass"></a>proxy_pass</h2><p>在 <code>nginx</code> 中配置 <code>proxy_pass</code> 代理转发时，如果在 <code>proxy_pass</code> 后面的 url 加 <code>/</code>，表示绝对根路径；如果没有 <code>/</code>，表示相对路径。</p>
<p>假设下面四种情况分别用 <code>http://192.168.1.1/proxy/test.html</code> 进行访问。</p>
<h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">/proxy</span>/ &#123;</span><br><span class="line">    proxy_pass http://<span class="number">127.0</span>.<span class="number">0.1</span>/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>http://127.0.0.1/test.html</code></p>
</blockquote>
<h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">/proxy</span>/ &#123;</span><br><span class="line">    proxy_pass http://<span class="number">127.0</span>.<span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>http://127.0.0.1/proxy/test.html</code></p>
</blockquote>
<h3 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">location <span class="regexp">/proxy/</span> &#123;</span><br><span class="line">    proxy_pass http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="regexp">/aaa/</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>http://127.0.0.1/aaa/test.html</code></p>
</blockquote>
<h3 id="第四种"><a href="#第四种" class="headerlink" title="第四种"></a>第四种</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">/proxy</span>/ &#123;</span><br><span class="line">    proxy_pass http://<span class="number">127.0</span>.<span class="number">0.1</span>/aaa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>http://127.0.0.1/aaatest.html</code></p>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx 在同一个路径下反代 HTTP 和 WebSocket</title>
    <url>/2022/08/04/nginx-proxy-http-and-websocket/</url>
    <content><![CDATA[<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  <span class="regexp">//</span> settings</span><br><span class="line"></span><br><span class="line">  location <span class="regexp">/api/</span> &#123;</span><br><span class="line">    try_files /nonexistent @<span class="variable">$http_upgrade</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  location @ &#123;</span><br><span class="line">    rewrite ^<span class="regexp">/api/</span>(.*) /<span class="variable">$1</span> <span class="keyword">break</span>;</span><br><span class="line">    proxy_pass http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">4080</span>;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Real-PORT <span class="variable">$remote_port</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  location @websocket &#123;</span><br><span class="line">    rewrite ^<span class="regexp">/api/</span>(.*) /<span class="variable">$1</span> <span class="keyword">break</span>;</span><br><span class="line">    proxy_pass http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">4080</span>;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Real-PORT <span class="variable">$remote_port</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="comment"># websocket</span></span><br><span class="line">    proxy_http_version <span class="number">1.1</span>;</span><br><span class="line">    proxy_set_header Connection <span class="string">&quot;Upgrade&quot;</span>;</span><br><span class="line">    proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS 发送通知</title>
    <url>/2023/05/16/notify-on-macos/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">osascript -l AppleScript -e &#x27;display notification &quot;Hello World!&quot; with title &quot;Hi!&quot;&#x27;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>通过 pid 查看 k8s pod name</title>
    <url>/2024/02/19/pid-for-k8s-pod/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nsenter -t $PID -u hostname</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE 修改 hostname</title>
    <url>/2023/07/21/pve-change-hostname/</url>
    <content><![CDATA[<p>安装 <span class="exturl" data-url="aHR0cHM6Ly9wdmUucHJveG1veC5jb20vd2lraS9SZW5hbWluZ19hX1BWRV9ub2Rl">官方教程<i class="fa fa-external-link-alt"></i></span> 可以在没有虚拟机的 <code>PVE</code> 上修改 <code>hostname</code>。</p>
<p>具体操作是依次修改下面的文件，将其中的 <code>old-hostname</code> 替换为 <code>new-hostname</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/hosts</span><br><span class="line">nano /etc/hostname</span><br><span class="line">nano /etc/pve/corosync.conf</span><br><span class="line">nano /etc/mailname</span><br><span class="line">nano /etc/postfix/main.cf</span><br></pre></td></tr></table></figure>

<p>同时将 <code>/var/lib/rrdcached/db/pve2-&#123;node,storage&#125;/old-hostname</code> 的内容复制到 <code>/var/lib/rrdcached/db/pve2-&#123;node,storage&#125;/new-hostname</code> 并删除旧目录。</p>
<hr>
<p><strong>以下操作非常危险，很可能造成数据损坏，正确的做法应该是将虚拟机备份恢复到其他机器上</strong></p>
<hr>
<p>如果机器上有虚拟机则需要做以下额外的操作才可以在 <code>WebUI</code> 中看到正确的节点。</p>
<p>进入 <code>/etc/pve/nodes</code> 目录，将 <code>old-hostname</code> 下的文件夹内的内容移动到 <code>new-hostname</code> 相应的文件夹下</p>
<p>重启后尝试启动虚拟机，如果出现错误 <code>TASK ERROR: activating LV &#39;pve/vm-xxx&#39; failed:   Activation of logical volume pve/vm-xxx is prohibited while logical volume pve/data_tmeta is active.</code> 尝试使用以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lvchange -an pve/data_tdata</span><br><span class="line">lvchange -an pve/data_tmeta</span><br><span class="line">lvchange -ay</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>pve</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE 启动 IOMMU</title>
    <url>/2023/07/21/pve-enable-iommu/</url>
    <content><![CDATA[<h2 id="INTEL"><a href="#INTEL" class="headerlink" title="INTEL"></a>INTEL</h2><ol>
<li>修改 <code>/etc/default/grub</code></li>
</ol>
<ul>
<li><p>添加 <code>intel_iommu=on</code></p>
</li>
<li><p>修改 <code>GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on&quot;</code></p>
</li>
</ul>
<ol start="2">
<li>加载 <code>vifo</code> 系统模块</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/modules</span><br></pre></td></tr></table></figure>

<p>添加以下内容</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">vfio</span><br><span class="line">vfio<span class="emphasis">_iommu_type1</span></span><br><span class="line"><span class="emphasis">vfio_pci</span></span><br><span class="line"><span class="emphasis">vfio_</span>virqfd</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>更新 <code>grub</code> 并重启</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">update-grub</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>重启后运行以下命令，如果有输出基本可确认成功</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dmesg | grep -e DMAR -e IOMMU</span><br></pre></td></tr></table></figure>

<h2 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a>AMD</h2><p>步骤与 <code>INTEL</code> 类似，把 <code>intel</code> 相关修改为 <code>amd</code></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>pve</tag>
        <tag>iommu</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE 移除 No valid subscription 提示</title>
    <url>/2023/07/21/pve-hidden-no-valid-subscription/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/share/javascript/proxmox-widget-toolkit</span><br><span class="line">cp proxmoxlib.js proxmoxlib.js.bak</span><br><span class="line">vim proxmoxlib.js</span><br></pre></td></tr></table></figure>

<p>将 <code>No valid subscription</code> 前面的 <code>Ext.Msg.show</code> 替换为 <code>void</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl reload pveproxy.service</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>pve</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE 在存在虚拟机的情况下添加到集群</title>
    <url>/2023/07/21/pve-join-cluster-if-exists-vms/</url>
    <content><![CDATA[<p><strong>此操作危险，不建议使用</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/cluster_bak</span><br><span class="line">mv /etc/pve/nodes/&#123;hostname&#125;/qemu-server/* ~/cluster_bak</span><br></pre></td></tr></table></figure>

<p>然后在 <code>WebUI</code> 中操作添加到集群，添加完成后将备份的文件复制回来：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv ~/cluster_bak/* /etc/pve/nodes/&#123;hostname&#125;/qemu-server/</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>pve</tag>
      </tags>
  </entry>
  <entry>
    <title>kubectl 重启某个 Namespace 下的所有 Deployment</title>
    <url>/2024/02/19/restart-all-deployment-in-namespace/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">NAMESPACE=&quot;arc-os&quot;</span><br><span class="line">for DEPLOY in $(kubectl get deployments -n $NAMESPACE | tail -n +2 | cut -d &#x27; &#x27; -f 1); do kubectl rollout restart deployments/$DEPLOY -n $NAMESPACE; done</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>kubectl</tag>
      </tags>
  </entry>
  <entry>
    <title>Samba 文件共享</title>
    <url>/2019/11/28/samba/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install samba</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="新建系统用户"><a href="#新建系统用户" class="headerlink" title="新建系统用户"></a>新建系统用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -M -s /sbin/nologin <span class="variable">$&#123;user&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="新建-samba-用户"><a href="#新建-samba-用户" class="headerlink" title="新建 samba 用户"></a>新建 samba 用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smbpasswd -a <span class="variable">$&#123;user&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改-samba-配置文件"><a href="#修改-samba-配置文件" class="headerlink" title="修改 samba 配置文件"></a>修改 samba 配置文件</h3><p>在文件末尾添加如下配置：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">[Samba]</span><br><span class="line">  <span class="keyword">comment</span> = Samba</span><br><span class="line">  <span class="type">path</span> = /opt/samba</span><br><span class="line">  guest ok = <span class="keyword">no</span></span><br><span class="line">  <span class="keyword">read</span> <span class="keyword">only</span> = <span class="keyword">no</span></span><br><span class="line">  browseable = yes</span><br></pre></td></tr></table></figure>

<p>不要忘了授予 <code>$&#123;user&#125;</code> <code>/opt/samba</code> 目录权限</p>
<h3 id="重启-samba-服务"><a href="#重启-samba-服务" class="headerlink" title="重启 samba 服务"></a>重启 samba 服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart smbd.service</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>samba</tag>
      </tags>
  </entry>
  <entry>
    <title>查询 timescale table 行数</title>
    <url>/2024/02/19/select-timescale-table/</url>
    <content><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> h.schema_name,</span><br><span class="line">       h.table_name,</span><br><span class="line">       h.id <span class="keyword">AS</span> table_id,</span><br><span class="line">       h.associated_table_prefix,</span><br><span class="line">       row_estimate.row_estimate</span><br><span class="line"><span class="keyword">FROM</span> _timescaledb_catalog.hypertable h</span><br><span class="line">         <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> <span class="keyword">LATERAL</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">SUM</span>(cl.reltuples) <span class="keyword">AS</span> row_estimate</span><br><span class="line">    <span class="keyword">FROM</span> _timescaledb_catalog.chunk c</span><br><span class="line">             <span class="keyword">JOIN</span> pg_class cl <span class="keyword">ON</span> cl.relname <span class="operator">=</span> c.table_name</span><br><span class="line">    <span class="keyword">WHERE</span> c.hypertable_id <span class="operator">=</span> h.id</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> h.schema_name, h.table_name</span><br><span class="line">    ) row_estimate</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> schema_name, row_estimate <span class="keyword">DESC</span>, table_name;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>timescaledb</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Chrome 地址栏中显示完整网址</title>
    <url>/2020/06/28/show-full-path-in-chrome/</url>
    <content><![CDATA[<p>打开 <code>chrome://flags/#omnibox-context-menu-show-full-urls</code> 地址，将 <code>Context menu show full URLs</code> 设置为 <code>Enabled</code>。</p>
<p>重启 <code>Chrome</code> 后，在地址栏右击勾选 <code>总是显示完整网址</code>。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Prometheus 中使用钉钉机器人</title>
    <url>/2020/07/21/use-dingtalk-in-prometheus/</url>
    <content><![CDATA[<h2 id="启动-prometheus-webhook-dingtalk"><a href="#启动-prometheus-webhook-dingtalk" class="headerlink" title="启动 prometheus-webhook-dingtalk"></a>启动 <code>prometheus-webhook-dingtalk</code></h2><ul>
<li><code>/data/prometheus-webhook-dingtalk/config/config.yml</code></li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">timeout:</span> <span class="string">10s</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default_message:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; template &quot;legacy.title&quot; . &#125;&#125;</span>&#x27;</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; template &quot;legacy.content&quot; . &#125;&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">targets:</span></span><br><span class="line">  <span class="attr">webhook1:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://oapi.dingtalk.com/robot/send?access_token=xxx</span></span><br><span class="line">    <span class="attr">secret:</span> <span class="string">yyy</span></span><br><span class="line">    <span class="attr">mention:</span></span><br><span class="line">      <span class="attr">all:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name prometheus-webhook-dingtalk \</span><br><span class="line">    --restart always \</span><br><span class="line">    -p 8060:8060 \</span><br><span class="line">    -v /data/prometheus-webhook-dingtalk/config:/etc/prometheus-webhook-dingtalk \</span><br><span class="line">    timonwong/prometheus-webhook-dingtalk</span><br></pre></td></tr></table></figure>

<h2 id="修改-prometheus-配置文件"><a href="#修改-prometheus-配置文件" class="headerlink" title="修改 prometheus 配置文件"></a>修改 <code>prometheus</code> 配置文件</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">&quot;dingtalk1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dingtalk1</span></span><br><span class="line">  <span class="attr">webhook_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">send_resolved:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://127.0.0.1:8060/dingtalk/webhook1/send</span></span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly90aGVvLmltL2Jsb2cvMjAxNy8xMC8xNi9yZWxlYXNlLXByb21ldGhldXMtYWxlcnRtYW5hZ2VyLXdlYmhvb2stZm9yLWRpbmd0YWxrLw==">theo.im&#x2F;blog<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RpbW9ud29uZy9wcm9tZXRoZXVzLXdlYmhvb2stZGluZ3RhbGs=">timonwong&#x2F;prometheus-webhook-dingtalk<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>prometheus</tag>
        <tag>dingtalk</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Grafana + Prometheus + Node-Exporter 监控机器</title>
    <url>/2020/04/26/use-grafana-monitor-vps/</url>
    <content><![CDATA[<h2 id="创建-Node-Exporter"><a href="#创建-Node-Exporter" class="headerlink" title="创建 Node-Exporter"></a>创建 Node-Exporter</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Byb21ldGhldXMvbm9kZV9leHBvcnRlcg==">https://github.com/prometheus/node_exporter<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name node-exporter \</span><br><span class="line">    --restart always \</span><br><span class="line">    --net host \</span><br><span class="line">    --pid host \</span><br><span class="line">    -m 512m \</span><br><span class="line">    -v /:/host:ro,rslave \</span><br><span class="line">    prom/node-exporter:latest \</span><br><span class="line">    --path.rootfs=/host</span><br></pre></td></tr></table></figure>

<h2 id="创建-Prometheus"><a href="#创建-Prometheus" class="headerlink" title="创建 Prometheus"></a>创建 Prometheus</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Byb21ldGhldXMvcHJvbWV0aGV1cw==">https://github.com/prometheus/prometheus<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># prometheus.yml</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">60s</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:9090&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;node&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:9100&quot;</span>  <span class="comment"># local</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&quot;127.0.0.2:9100&quot;</span> <span class="comment"># other</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name prometheus \</span><br><span class="line">    --restart always \</span><br><span class="line">    --user root \</span><br><span class="line">    -p 9090:9090 \</span><br><span class="line">    -m 2048m \</span><br><span class="line">    -v /opt/docker/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml \</span><br><span class="line">    -v /opt/docker/prometheus/data:/prometheus \</span><br><span class="line">    prom/prometheus:latest</span><br></pre></td></tr></table></figure>

<h2 id="创建-Grafana"><a href="#创建-Grafana" class="headerlink" title="创建 Grafana"></a>创建 Grafana</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dyYWZhbmEvZ3JhZmFuYQ==">https://github.com/grafana/grafana<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name grafana \</span><br><span class="line">    --restart always \</span><br><span class="line">    --user root \</span><br><span class="line">    -p 3000:3000 \</span><br><span class="line">    -v /opt/docker/grafana:/var/lib/grafana \</span><br><span class="line">    grafana/grafana:latest</span><br></pre></td></tr></table></figure>

<h2 id="配置-Grafana"><a href="#配置-Grafana" class="headerlink" title="配置 Grafana"></a>配置 Grafana</h2><h3 id="配置-DataSources"><a href="#配置-DataSources" class="headerlink" title="配置 DataSources"></a>配置 DataSources</h3><p>在地址 <code>&#123;$server_url&#125;/datasources/new</code> 选择 <code>Prometheus</code>，在 <code>URL</code> 处填写地址。</p>
<ul>
<li>如果使用 <code>docker</code> 部署 <code>Grafana</code>，需通过宿主机访问 <code>Prometheus</code>，所以地址可能是 <code>http://172.17.0.1:9090</code>。</li>
</ul>
<h3 id="导入-Dashboard"><a href="#导入-Dashboard" class="headerlink" title="导入 Dashboard"></a>导入 Dashboard</h3><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9ncmFmYW5hLmNvbS9ncmFmYW5hL2Rhc2hib2FyZHMvODkxOQ==">https://grafana.com/grafana/dashboards/8919<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>这里推荐使用上面的模版，在地址 <code>&#123;$server_url&#125;/dashboard/import</code> 输入 id <code>8919</code> 然后保存即可。</p>
<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><img data-src="/images/11-1.png" alt="预览" style="max-height:600px;"/>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>prometheus</tag>
        <tag>grafana</tag>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 WinSW 部署 Windows Service</title>
    <url>/2020/05/29/use-winsw-to-deploy-windoes-service/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpbnN3L3dpbnN3">winsw&#x2F;winsw<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>在 <code>Release</code> 页面下载最新版本以及示例配置文件。</p>
<p>将可执行文件和配置文件都复制到自定义的目录，并将文件名改为一致。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>下面我使用 <code>Frpc</code> 作为演示。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- frpc-service.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>frpc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Frpc Service<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executable</span>&gt;</span>E:\Frp\frpc.exe<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">&quot;restart&quot;</span> <span class="attr">delay</span>=<span class="string">&quot;5 sec&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resetfailure</span>&gt;</span>1 day<span class="tag">&lt;/<span class="name">resetfailure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>-c E:\Frp\frpc.ini<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">workingdirectory</span>&gt;</span>E:\Frp<span class="tag">&lt;/<span class="name">workingdirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">priority</span>&gt;</span>AboveNormal<span class="tag">&lt;/<span class="name">priority</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stoptimeout</span>&gt;</span>15 sec<span class="tag">&lt;/<span class="name">stoptimeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stopparentprocessfirst</span>&gt;</span>false<span class="tag">&lt;/<span class="name">stopparentprocessfirst</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">startmode</span>&gt;</span>Automatic<span class="tag">&lt;/<span class="name">startmode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">waithint</span>&gt;</span>15 sec<span class="tag">&lt;/<span class="name">waithint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sleeptime</span>&gt;</span>1 sec<span class="tag">&lt;/<span class="name">sleeptime</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logpath</span>&gt;</span>E:\Frp\logs<span class="tag">&lt;/<span class="name">logpath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">log</span> <span class="attr">mode</span>=<span class="string">&quot;roll-by-time&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>yyyyMMdd<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>相关配置的解读请参考下载的示例配置文件。</p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先运行测试，看配置是否可以正常运行</span></span><br><span class="line">./frpc-service.exe testwait</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Service</span></span><br><span class="line">./frpc-service.exe install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行 Service</span></span><br><span class="line">./frpc-service.exe start</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">A wrapper binary that can be used to host executables as Windows services</span><br><span class="line"></span><br><span class="line">Usage: winsw [/redirect file] &lt;command&gt; [&lt;args&gt;]</span><br><span class="line">       Missing arguments trigger the service mode</span><br><span class="line"></span><br><span class="line">Available commands:</span><br><span class="line">  install     install the service to Windows Service Controller</span><br><span class="line">  uninstall   uninstall the service</span><br><span class="line">  start       start the service (must be installed before)</span><br><span class="line">  stop        stop the service</span><br><span class="line">  stopwait    stop the service<span class="built_in"> and </span>wait until it&#x27;s actually stopped</span><br><span class="line">  restart     restart the service</span><br><span class="line">  restart!    self-restart (can be called from child processes)</span><br><span class="line">  status     <span class="built_in"> check </span>the current status of the service</span><br><span class="line">  test       <span class="built_in"> check </span>if the service can be started<span class="built_in"> and </span>then stopped</span><br><span class="line">  testwait    starts the service<span class="built_in"> and </span>waits until a key is pressed then stops the service</span><br><span class="line">  version     print the version info</span><br><span class="line">  help        print the help info (aliases: -h,--help,-?,/?)</span><br><span class="line"></span><br><span class="line">Extra options:</span><br><span class="line">  /redirect   redirect the wrapper&#x27;s STDOUT<span class="built_in"> and </span>STDERR to the specified file</span><br><span class="line"></span><br><span class="line">WinSW 2.9.0.0</span><br><span class="line">More info: https://github.com/kohsuke/winsw</span><br><span class="line">Bug tracker: https://github.com/kohsuke/winsw/issues</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>winsw</tag>
      </tags>
  </entry>
</search>
