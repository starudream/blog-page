<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>生成 GitLab EE 许可证</title>
    <url>/2020/01/19/6-crack-gitlab/</url>
    <content><![CDATA[<p><strong>基于 <code>gitlab-ee:12.6.4-ee</code></strong></p><h2 id="1-创建-ruby-docker-镜像"><a href="#1-创建-ruby-docker-镜像" class="headerlink" title="1. 创建 ruby docker 镜像"></a>1. 创建 ruby docker 镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --rm ruby /bin/bash</span><br></pre></td></tr></table></figure><h2 id="2-生成许可证"><a href="#2-生成许可证" class="headerlink" title="2. 生成许可证"></a>2. 生成许可证</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gem install gitlab-license</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &gt; license.rb</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">"openssl"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"gitlab/license"</span></span><br><span class="line"></span><br><span class="line">key_pair = OpenSSL::PKey::RSA.generate(<span class="number">2048</span>)</span><br><span class="line">File.open(<span class="string">"license_key"</span>, <span class="string">"w"</span>) &#123; <span class="params">|f|</span> f.write(key_pair.to_pem) &#125;</span><br><span class="line"></span><br><span class="line">public_key = key_pair.public_key</span><br><span class="line">File.open(<span class="string">"license_key.pub"</span>, <span class="string">"w"</span>) &#123; <span class="params">|f|</span> f.write(public_key.to_pem) &#125;</span><br><span class="line"></span><br><span class="line">private_key = OpenSSL::PKey::RSA.new File.read(<span class="string">"license_key"</span>)</span><br><span class="line">Gitlab::License.encryption_key = private_key</span><br><span class="line"></span><br><span class="line">license = Gitlab::License.new</span><br><span class="line">license.licensee = &#123;</span><br><span class="line">  <span class="string">"Name"</span> =&gt; <span class="string">"none"</span>,</span><br><span class="line">  <span class="string">"Company"</span> =&gt; <span class="string">"none"</span>,</span><br><span class="line">  <span class="string">"Email"</span> =&gt; <span class="string">"example@test.com"</span>,</span><br><span class="line">&#125;</span><br><span class="line">license.starts_at = Date.new(<span class="number">2020</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">license.expires_at = Date.new(<span class="number">2050</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">license.notify_admins_at = Date.new(<span class="number">2049</span>, <span class="number">12</span>, <span class="number">1</span>)</span><br><span class="line">license.notify_users_at = Date.new(<span class="number">2049</span>, <span class="number">12</span>, <span class="number">1</span>)</span><br><span class="line">license.block_changes_at = Date.new(<span class="number">2050</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">license.restrictions = &#123;</span><br><span class="line">  <span class="symbol">active_user_count:</span> <span class="number">10000</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">puts <span class="string">"License:"</span></span><br><span class="line">puts license</span><br><span class="line"></span><br><span class="line">data = license.export</span><br><span class="line">puts <span class="string">"Exported license:"</span></span><br><span class="line">puts data</span><br><span class="line">File.open(<span class="string">"GitLabBV.gitlab-license"</span>, <span class="string">"w"</span>) &#123; <span class="params">|f|</span> f.write(data) &#125;</span><br><span class="line"></span><br><span class="line">public_key = OpenSSL::PKey::RSA.new File.read(<span class="string">"license_key.pub"</span>)</span><br><span class="line">Gitlab::License.encryption_key = public_key</span><br><span class="line"></span><br><span class="line">data = File.read(<span class="string">"GitLabBV.gitlab-license"</span>)</span><br><span class="line">$license = Gitlab::License.import(data)</span><br><span class="line"></span><br><span class="line">puts <span class="string">"Imported license:"</span></span><br><span class="line">puts $license</span><br><span class="line"></span><br><span class="line"><span class="keyword">unless</span> $license</span><br><span class="line">  raise <span class="string">"The license is invalid."</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> $license.restricted?(<span class="symbol">:active_user_count</span>)</span><br><span class="line">  active_user_count = <span class="number">10000</span></span><br><span class="line">  <span class="keyword">if</span> active_user_count &gt; $license.restrictions[<span class="symbol">:active_user_count</span>]</span><br><span class="line">    raise <span class="string">"The active user count exceeds the allowed amount!"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> $license.notify_admins?</span><br><span class="line">  puts <span class="string">"The license is due to expire on <span class="subst">#&#123;$license.expires_at&#125;</span>."</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> $license.notify_users?</span><br><span class="line">  puts <span class="string">"The license is due to expire on <span class="subst">#&#123;$license.expires_at&#125;</span>."</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Gitlab</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">GitAccess</span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(cmd, changes = <span class="literal">nil</span>)</span></span></span><br><span class="line">      <span class="keyword">if</span> $license.block_changes?</span><br><span class="line">        <span class="keyword">return</span> build_status_object(<span class="literal">false</span>, <span class="string">"License expired"</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">puts <span class="string">"This instance of GitLab Enterprise Edition is licensed to:"</span></span><br><span class="line">$license.licensee.each <span class="keyword">do</span> <span class="params">|key, value|</span></span><br><span class="line">  puts <span class="string">"<span class="subst">#&#123;key&#125;</span>: <span class="subst">#&#123;value&#125;</span>"</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> $license.expired?</span><br><span class="line">  puts <span class="string">"The license expired on <span class="subst">#&#123;$license.expires_at&#125;</span>"</span></span><br><span class="line"><span class="keyword">elsif</span> $license.will_expire?</span><br><span class="line">  puts <span class="string">"The license will expire on <span class="subst">#&#123;$license.expires_at&#125;</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  puts <span class="string">"The license will never expire."</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>最后生成 <code>GitLabBV.gitlab-license</code> <code>license_key</code> <code>license_key.pub</code> 这三个文件。</p><h2 id="3-使用许可证"><a href="#3-使用许可证" class="headerlink" title="3. 使用许可证"></a>3. 使用许可证</h2><p>用 <code>license_key.pub</code> 文件替换 <code>/opt/gitlab/embedded/service/gitlab-rails/.license_encryption_key.pub</code>。</p><p><code>GitLabBV.gitlab-license</code> 即是许可证，填入 <code>${address}/admin/license</code> 地址，之后重启即可。</p><h2 id="4-修改等级"><a href="#4-修改等级" class="headerlink" title="4. 修改等级"></a>4. 修改等级</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- /opt/gitlab/embedded/service/gitlab-rails/ee/app/models/license.rb</span></span><br><span class="line"><span class="comment">+++ /opt/gitlab/embedded/service/gitlab-rails/ee/app/models/license.rb</span></span><br><span class="line"><span class="meta">@@ -367,7 +367,7 @@</span></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def plan</span><br><span class="line"><span class="deletion">-    restricted_attr(:plan).presence || STARTER_PLAN</span></span><br><span class="line"><span class="addition">+    restricted_attr(:plan).presence || ULTIMATE_PLAN</span></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def edition</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVieWRvYy5pbmZvL2dlbXMvZ2l0bGFiLWxpY2Vuc2UvMS4wLjAvZmlsZS9SRUFETUUubWQ=" title="https://www.rubydoc.info/gems/gitlab-license/1.0.0/file/README.md">https://www.rubydoc.info/gems/gitlab-license/1.0.0/file/README.md<i class="fa fa-external-link"></i></span></li></ul>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>crack</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>修改主题 Pisces</title>
    <url>/2019/12/19/5-motify-theme-pisces/</url>
    <content><![CDATA[<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- a/themes/next/layout/_scripts/pjax.swig</span></span><br><span class="line"><span class="comment">+++ b/themes/next/layout/_scripts/pjax.swig</span></span><br><span class="line">@@ -15,8 +15,8 @@ var pjax = new Pjax(&#123;</span><br><span class="line">   scrollTo : !CONFIG.bookmark.enable</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="deletion">-window.addEventListener('pjax:success', () =&gt; &#123;</span></span><br><span class="line"><span class="deletion">-  document.querySelectorAll('script[pjax], script#page-configurations, #pjax script').forEach(element =&gt; &#123;</span></span><br><span class="line"><span class="addition">+window.addEventListener('pjax:success', function() &#123;</span></span><br><span class="line"><span class="addition">+  document.querySelectorAll('script[pjax], script#page-configurations, #pjax script').forEach(function(element) &#123;</span></span><br><span class="line">     var code = element.text || element.textContent || element.innerHTML || '';</span><br><span class="line">     var parent = element.parentNode;</span><br><span class="line">     parent.removeChild(element);</span><br><span class="line"></span><br><span class="line"><span class="comment">--- a/themes/next/layout/_third-party/comments/disqus.swig</span></span><br><span class="line"><span class="comment">+++ b/themes/next/layout/_third-party/comments/disqus.swig</span></span><br><span class="line"><span class="meta">@@ -41,7 +41,7 @@</span></span><br><span class="line">         // load directly when there's no a scrollbar</span><br><span class="line">         window.addEventListener('load', loadComments, false);</span><br><span class="line">       &#125; else &#123;</span><br><span class="line"><span class="deletion">-        var disqus_scroll = () =&gt; &#123;</span></span><br><span class="line"><span class="addition">+        var disqus_scroll = function() &#123;</span></span><br><span class="line">           // offsetTop may changes because of manually resizing browser window or lazy loading images.</span><br><span class="line">           var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;</span><br><span class="line">           var scrollTop = window.scrollY;</span><br><span class="line"></span><br><span class="line"><span class="comment">--- a/themes/next/layout/_third-party/quicklink.swig</span></span><br><span class="line"><span class="comment">+++ b/themes/next/layout/_third-party/quicklink.swig</span></span><br><span class="line"><span class="meta">@@ -3,12 +3,12 @@</span></span><br><span class="line">   &lt;script src="&#123;&#123; quicklink_uri &#125;&#125;"&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">     &#123;%- if page.quicklink.delay %&#125;</span><br><span class="line"><span class="deletion">-      window.addEventListener('load', () =&gt; &#123;</span></span><br><span class="line"><span class="addition">+      window.addEventListener('load', function() &#123;</span></span><br><span class="line">     &#123;%- endif %&#125;</span><br><span class="line">       quicklink(&#123;</span><br><span class="line">         timeout: &#123;&#123; page.quicklink.timeout &#125;&#125;,</span><br><span class="line">         priority: &#123;&#123; page.quicklink.priority &#125;&#125;,</span><br><span class="line"><span class="deletion">-        ignores: [uri =&gt; uri.includes('#'),uri =&gt; uri == '&#123;&#123; url | replace('index.html', '') &#125;&#125;',&#123;&#123; page.quicklink.ignores &#125;&#125;]</span></span><br><span class="line"><span class="addition">+        ignores: [function(uri) &#123; return uri.includes('#') &#125;, function(uri) &#123; return uri === '&#123;&#123; url | replace('index.html', '') &#125;&#125;' &#125;, &#123;&#123; page.quicklink.ignores &#125;&#125;]</span></span><br><span class="line">       &#125;);</span><br><span class="line">     &#123;%- if page.quicklink.delay %&#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>主题</category>
      </categories>
      <tags>
        <tag>theme</tag>
        <tag>pisces</tag>
      </tags>
  </entry>
  <entry>
    <title>基于 docker 安装 GitLab 和 GitLab-Runner</title>
    <url>/2019/12/13/4-install-gitlab-and-gitlab-runner/</url>
    <content><![CDATA[<h2 id="1-安装-docker-并拉取相关镜像"><a href="#1-安装-docker-并拉取相关镜像" class="headerlink" title="1. 安装 docker 并拉取相关镜像"></a>1. 安装 docker 并拉取相关镜像</h2><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2dpdGxhYi9naXRsYWItY2U=" title="https://hub.docker.com/r/gitlab/gitlab-ce">gitlab/gitlab-ce<i class="fa fa-external-link"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2dpdGxhYi9naXRsYWItcnVubmVy" title="https://hub.docker.com/r/gitlab/gitlab-runner">gitlab/gitlab-runner<i class="fa fa-external-link"></i></span></p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull gitlab/gitlab-ce</span><br><span class="line">docker pull gitlab/gitlab-runner</span><br></pre></td></tr></table></figure><h2 id="2-运行-docker-镜像"><a href="#2-运行-docker-镜像" class="headerlink" title="2. 运行 docker 镜像"></a>2. 运行 docker 镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">	--detach \</span><br><span class="line">	--hostname code.52xckl.cn \</span><br><span class="line">	--publish 127.0.0.1:50080:80 \</span><br><span class="line">	--publish 127.0.0.1:50022:22 \</span><br><span class="line">	--name gitlab \</span><br><span class="line">	--restart always \</span><br><span class="line">	--volume /opt/docker/gitlab/config:/etc/gitlab \</span><br><span class="line">	--volume /opt/docker/gitlab/logs:/var/<span class="built_in">log</span>/gitlab \</span><br><span class="line">	--volume /opt/docker/gitlab/data:/var/opt/gitlab \</span><br><span class="line">	gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">	--detach \</span><br><span class="line">	--name gitlab-runner \</span><br><span class="line">	--link gitlab:gitlab</span><br><span class="line">	--restart always \</span><br><span class="line">	--volume /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">	--volume /opt/docker/gitlab-runner/config:/etc/gitlab-runner \</span><br><span class="line">	gitlab/gitlab-runner:latest</span><br></pre></td></tr></table></figure><h2 id="3-注册-gitlab-runner"><a href="#3-注册-gitlab-runner" class="headerlink" title="3. 注册 gitlab-runner"></a>3. 注册 gitlab-runner</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it gitlab-runner gitlab-runner register</span><br><span class="line"><span class="comment"># 之后访问地址 http://code.52xckl.cn/admin/runners 配置即可</span></span><br><span class="line"><span class="comment"># 配置地址可以使用 http://gitlab 内网</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGxhYi5jb20vb21uaWJ1cy9kb2NrZXIv" title="https://docs.gitlab.com/omnibus/docker/">gitlab<i class="fa fa-external-link"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGxhYi5jb20vcnVubmVyL2luc3RhbGwvZG9ja2VyLmh0bWw=" title="https://docs.gitlab.com/runner/install/docker.html">gitlab-runner<i class="fa fa-external-link"></i></span></p></li></ul>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>GitKraken Crack</title>
    <url>/2019/12/12/3-gitkraken-crack/</url>
    <content><![CDATA[<h2 id="1-安装-npm-以及-asar"><a href="#1-安装-npm-以及-asar" class="headerlink" title="1. 安装 npm 以及 asar"></a>1. 安装 npm 以及 asar</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># download: https://nodejs.org/en/</span></span><br><span class="line">npm i -g asar</span><br></pre></td></tr></table></figure><h2 id="2-解压-GitKraken-的资源文件"><a href="#2-解压-GitKraken-的资源文件" class="headerlink" title="2. 解压 GitKraken 的资源文件"></a>2. 解压 GitKraken 的资源文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装目录\gitkraken\app-x.x.x\resources</span></span><br><span class="line">asar extract ./app.asar ./tmp/</span><br></pre></td></tr></table></figure><h2 id="3-修改-static-index-js-文件（注意备份）"><a href="#3-修改-static-index-js-文件（注意备份）" class="headerlink" title="3. 修改 static/index.js 文件（注意备份）"></a>3. 修改 static/index.js 文件（注意备份）</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">--- static/index.js</span></span><br><span class="line"><span class="comment">+++ static/index.js</span></span><br><span class="line"><span class="meta">@@ -1,7 +1,29 @@</span></span><br><span class="line"> // Warning: You almost certainly do *not* want to edit this code -</span><br><span class="line"> // instead, you want to edit src/js/main.jsx instead</span><br><span class="line"></span><br><span class="line"><span class="addition">+function XhrPromiseReduxProxy() &#123;</span></span><br><span class="line"><span class="addition">+  const xhrPromiseRedux = snapshotResult.customRequire(</span></span><br><span class="line"><span class="addition">+    'xhr-promise-redux/dist/index.js'</span></span><br><span class="line"><span class="addition">+  );</span></span><br><span class="line"><span class="addition">+  xhrPromiseRedux._post = xhrPromiseRedux.post;</span></span><br><span class="line"><span class="addition">+  xhrPromiseRedux.post = async (url, options) =&gt; &#123;</span></span><br><span class="line"><span class="addition">+    const res = await xhrPromiseRedux._post(url, options);</span></span><br><span class="line"><span class="addition">+    if (url.match(/https:\/\/.*api.gitkraken.com\/phone-home/)) &#123;</span></span><br><span class="line"><span class="addition">+      res.body.availableTrialDays = null;</span></span><br><span class="line"><span class="addition">+      res.body.code = 0;</span></span><br><span class="line"><span class="addition">+      res.body.features = [];</span></span><br><span class="line"><span class="addition">+      res.body.individualAccessState = null;</span></span><br><span class="line"><span class="addition">+      res.body.licenseExpiresAt = 8640000000000000;</span></span><br><span class="line"><span class="addition">+      res.body.licensedFeatures = ['pro'];</span></span><br><span class="line"><span class="addition">+      res.body.proAccessState = null;</span></span><br><span class="line"><span class="addition">+    &#125;</span></span><br><span class="line"><span class="addition">+    return res;</span></span><br><span class="line"><span class="addition">+  &#125;;</span></span><br><span class="line"><span class="addition">+&#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> (function() &#123;</span><br><span class="line"><span class="addition">+  XhrPromiseReduxProxy();</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line">   const Perf = snapshotResult.customRequire('./src/js/utils/Performance.js');</span><br><span class="line">   Perf.timeEnd('loading monaco scripts');</span><br><span class="line">   Perf.time('index.js pre-bootstrap');</span><br></pre></td></tr></table></figure><h2 id="4-重新打包"><a href="#4-重新打包" class="headerlink" title="4. 重新打包"></a>4. 重新打包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">asar pack ./tmp/ app.asar</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>gitkraken</tag>
        <tag>crack</tag>
      </tags>
  </entry>
  <entry>
    <title>Samba 文件共享</title>
    <url>/2019/11/28/2-samba/</url>
    <content><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install samba</span><br></pre></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="2-1-新建系统用户"><a href="#2-1-新建系统用户" class="headerlink" title="2.1 新建系统用户"></a>2.1 新建系统用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -M -s /sbin/nologin <span class="variable">$&#123;user&#125;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-新建-samba-用户"><a href="#2-2-新建-samba-用户" class="headerlink" title="2.2 新建 samba 用户"></a>2.2 新建 samba 用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smbpasswd -a <span class="variable">$&#123;user&#125;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-修改-samba-配置文件"><a href="#2-3-修改-samba-配置文件" class="headerlink" title="2.3 修改 samba 配置文件"></a>2.3 修改 samba 配置文件</h3><p>在文件末尾添加如下配置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Samba]</span><br><span class="line">  comment &#x3D; Samba</span><br><span class="line">  path &#x3D; &#x2F;opt&#x2F;samba</span><br><span class="line">  guest ok &#x3D; no</span><br><span class="line">  read only &#x3D; no</span><br><span class="line">  browseable &#x3D; yes</span><br></pre></td></tr></table></figure><p>不要忘了授予 <code>${user}</code> <code>/opt/samba</code> 目录权限</p><h3 id="2-4-重启-samba-服务"><a href="#2-4-重启-samba-服务" class="headerlink" title="2.4 重启 samba 服务"></a>2.4 重启 samba 服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart smbd.service</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>samba</tag>
      </tags>
  </entry>
  <entry>
    <title>简单介绍</title>
    <url>/2019/11/19/1-introduction/</url>
    <content><![CDATA[<p>博客使用 <code>Hexo</code>，搭建在 <code>Github Pages</code>，源代码部署在 <code>GitLab</code> 上，使用相关 <code>CI</code> 自动化部署。</p><h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a><code>_config.yml</code></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://$&#123;username&#125;:$&#123;token|password&#125;@github.com/starudream/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">update</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">$&#123;name&#125;</span></span><br><span class="line">  <span class="attr">email:</span> <span class="string">$&#123;email&#125;</span></span><br></pre></td></tr></table></figure><h3 id="gitlab-ci-yml"><a href="#gitlab-ci-yml" class="headerlink" title=".gitlab-ci.yml"></a><code>.gitlab-ci.yml</code></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">node:lts-alpine</span></span><br><span class="line"></span><br><span class="line"><span class="attr">github:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">publish</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">apk</span> <span class="string">add</span> <span class="string">--no-cache</span> <span class="string">git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">$&#123;name&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">$&#123;email&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">https://$&#123;name&#125;:$&#123;token|password&#125;@github.com/starudream/blog.git</span> <span class="string">.deploy_git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">&amp;&amp;</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">publish</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">node_modules</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
